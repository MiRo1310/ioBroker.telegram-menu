{"version":3,"file":"GenericApp.js","names":["_react","_interopRequireDefault","require","_socketClient","_propTypes","Sentry","_interopRequireWildcard","SentryIntegrations","_material","_iconsMaterial","_Prompt","_Theme","_Loader","_Router2","_Utils","_SaveCloseButtons","_Confirm","_i18n","_Error","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","_typeof3","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","ownKeys","keys","getOwnPropertySymbols","o","filter","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty2","getOwnPropertyDescriptors","defineProperties","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","result","NewTarget","constructor","Reflect","construct","_possibleConstructorReturn2","sham","Proxy","Boolean","valueOf","cssStyle","window","localStorage","getItem","setItem","GenericApp","_Router","_inherits2","_super","props","settings","_this","_classCallCheck2","ConnectionClass","Connection","document","getElementById","style","createElement","setAttribute","innerHTML","head","appendChild","isWeb","io","location","port","SocketClient","_assertThisInitialized2","id","obj","_obj$common","socket","systemLang","common","language","I18n","setLanguage","_systemConfig","expertMode","setState","getExpertMode","message","data","newThemeName","Utils","getThemeName","setThemeName","newTheme","createTheme","theme","themeName","themeType","getThemeType","onThemeChange","onThemeChanged","onToggleExpertMode","console","debug","concat","JSON","stringify","resizeTimer","clearTimeout","setTimeout","width","getWidth","printPrompt","query","search","replace","args","trim","split","b","parts","instance","undefined","parseInt","slice","tmp","pathname","adapterName","instanceId","newReact","Router","getLocation","tab","_localStorage","themeInstance","state","selectedTab","selectedTabNum","errorText","changed","connected","loaded","isConfigurationError","toast","bottomButtons","confirmClose","_alert","_alertType","_alertMessage","translations","en","de","ru","pt","nl","fr","it","es","pl","uk","lang","assign","setTranslations","savedNative","encryptedFields","sentryDSN","socketUrl","startsWith","protocol","hostname","alerDialogRendered","oldAlert","alert","toString","toLowerCase","includes","error","showAlert","log","name","doNotLoadAllObjects","onProgress","progress","PROGRESS","CONNECTING","READY","onReady","subscribeObject","onSystemConfigChanged","then","getSystemConfig","_secret","secret","getObject","instanceObj","waitPromise","sentryEnabled","diag","version","disableDataReporting","host","sentryStarted","init","dsn","release","integrations","Dedupe","sentryInited","uuidObj","uuid","configureScope","scope","setUser","Promise","resolve","onPrepareLoad","encryptedNative","parse","onConnectionReady","warn","onError","err","showError","_createClass2","key","value","type","renderAlertSnackbar","_this2","Snackbar","backgroundColor","open","autoHideDuration","onClose","reason","alertMessage","componentDidMount","addEventListener","onResize","onReceiveMessage","_get2","componentWillUnmount","removeEventListener","currentTheme","palette","mode","toggleTheme","_this3","sessionStorage","encrypt","String","fromCharCode","charCodeAt","decrypt","onHashChanged","selectTab","index","onPrepareSave","_this4","attr","_this5","getExtendableInstances","_this6","_socket","emit","doc","rows","item","webExtendable","map","getIpAddresses","_this7","ip","_host","IPs4","address","family","IPs6","hardware","networkInterfaces","eth","inter","_ip","onSave","isClose","_this8","oldObj","_oldObj","setObject","reject","Error","globalThis","parent","postMessage","renderToast","_this9","anchorOrigin","vertical","horizontal","ContentProps","action","IconButton","color","className","classes","close","onClick","size","Close","renderError","_this10","text","getIsChanged","native","isChanged","onLoadConfig","newNative","setConfigurationError","renderSaveCloseButtons","_this11","Fragment","noTextOnButtons","title","ok","cancel","isYes","_updateNativeValue","attrs","_typeof2","shift","updateNativeValue","cb","showToast","renderHelperDialogs","render","SIZES","xs","sm","md","lg","xl","innerWidth","reverse","widthComputed","find","$iframeDialog","propTypes","PropTypes","string","func","object","array","bool","_default","exports"],"sources":["GenericApp.js"],"sourcesContent":["/**\n * Copyright 2018-2023 Denis Haev (bluefox) <dogafox@gmail.com>\n *\n * MIT License\n *\n **/\nimport React from 'react';\nimport { Connection, PROGRESS } from '@iobroker/socket-client';\nimport PropTypes from 'prop-types';\nimport * as Sentry from '@sentry/browser';\nimport * as SentryIntegrations from '@sentry/integrations';\n\nimport { Snackbar, IconButton } from '@mui/material';\n\nimport { Close as IconClose } from '@mui/icons-material';\n\nimport printPrompt from './Prompt';\nimport theme from './Theme';\nimport Loader from './Components/Loader';\nimport Router from './Components/Router';\nimport Utils from './Components/Utils';\nimport SaveCloseButtons from './Components/SaveCloseButtons';\nimport ConfirmDialog from './Dialogs/Confirm';\nimport I18n from './i18n';\nimport DialogError from './Dialogs/Error';\n\n// import './index.css';\nconst cssStyle = `\nhtml {\n    height: 100%;\n}\n\nbody {\n    margin: 0;\n    padding: 0;\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n}\n\n/* scrollbar */\n::-webkit-scrollbar-track {\n    background-color: #ccc;\n    border-radius: 5px;\n}\n\n::-webkit-scrollbar {\n    width: 5px;\n    height: 5px;\n    background-color: #ccc;\n}\n\n::-webkit-scrollbar-thumb {\n    background-color: #575757;\n    border-radius: 5px;\n}\n\n#root {\n    height: 100%;\n}\n\n.App {\n    height: 100%;\n}\n\n@keyframes glow {\n    from {\n        background-color: initial;\n    }\n    to {\n        background-color: #58c458;\n    }\n}\n`;\n\n// legacy and could be deleted\nif (!window.localStorage) {\n    window.localStorage = {\n        getItem: () => null,\n        setItem: () => null,\n    };\n}\n\n/**\n * @extends {Router<import('./types').GenericAppProps, import('./types').GenericAppState>}\n */\nclass GenericApp extends Router {\n    /**\n     * @var {LegacyConnection | AdminConnection}\n     */\n    socket;\n\n    /**\n     * @param {import('./types').GenericAppProps} props\n     * @param {import('./types').GenericAppSettings | undefined} settings\n     */\n    constructor(props, settings) {\n        const ConnectionClass = props.Connection || settings.Connection || Connection;\n        // const ConnectionClass = props.Connection === 'admin' || settings.Connection = 'admin' ? AdminConnection : (props.Connection || settings.Connection || Connection);\n\n        if (!window.document.getElementById('generic-app-iobroker-component')) {\n            const style = window.document.createElement('style');\n            style.setAttribute('id', 'generic-app-iobroker-component');\n            style.innerHTML = cssStyle;\n            window.document.head.appendChild(style);\n        }\n\n        // Remove `!Connection.isWeb() && window.adapterName !== 'material'` when iobroker.socket will support native ws\n        if (!ConnectionClass.isWeb() && window.io && window.location.port === '3000') {\n            try {\n                const io = new window.SocketClient();\n                delete window.io;\n                window.io = io;\n            } catch (e) {\n                // ignore\n            }\n        }\n\n        super(props);\n\n        printPrompt();\n\n        const query = (window.location.search || '').replace(/^\\?/, '').replace(/#.*$/, '');\n        const args = {};\n        query.trim().split('&').filter(t => t.trim()).forEach(b => {\n            const parts = b.split('=');\n            args[parts[0]] = parts.length === 2 ? parts[1] : true;\n            if (args[parts[0]] === 'true') {\n                args[parts[0]] = true;\n            } else if (args[parts[0]] === 'false') {\n                args[parts[0]] = false;\n            }\n        });\n\n        // extract instance from URL\n        this.instance = args.instance !== undefined ? parseInt(args.instance, 10) || 0 : (parseInt(window.location.search.slice(1), 10) || 0);\n        // extract adapter name from URL\n        const tmp = window.location.pathname.split('/');\n        this.adapterName = settings?.adapterName || props.adapterName || window.adapterName || tmp[tmp.length - 2] || 'iot';\n        this.instanceId  = `system.adapter.${this.adapterName}.${this.instance}`;\n        this.newReact = args.newReact === true; // it is admin5\n\n        const location = Router.getLocation();\n        location.tab = location.tab || (window._localStorage || window.localStorage).getItem(`${this.adapterName}-adapter`) || '';\n\n        const themeInstance = this.createTheme();\n\n        this.state = {\n            selectedTab:    (window._localStorage || window.localStorage).getItem(`${this.adapterName}-adapter`) || '',\n            selectedTabNum: -1,\n            native:         {},\n            errorText:      '',\n            changed:        false,\n            connected:      false,\n            loaded:         false,\n            isConfigurationError: '',\n            expertMode:     false,\n            toast:          '',\n            theme:          themeInstance,\n            themeName:      this.getThemeName(themeInstance),\n            themeType:      this.getThemeType(themeInstance),\n            bottomButtons:  (settings && settings.bottomButtons) === false ? false : (props?.bottomButtons !== false),\n            width:          GenericApp.getWidth(),\n            confirmClose:   false,\n            _alert:         false,\n            _alertType:     'info',\n            _alertMessage:  '',\n        };\n\n        // init translations\n        const translations = {\n            en: require('./i18n/en.json'),\n            de: require('./i18n/de.json'),\n            ru: require('./i18n/ru.json'),\n            pt: require('./i18n/pt.json'),\n            nl: require('./i18n/nl.json'),\n            fr: require('./i18n/fr.json'),\n            it: require('./i18n/it.json'),\n            es: require('./i18n/es.json'),\n            pl: require('./i18n/pl.json'),\n            uk: require('./i18n/uk.json'),\n            'zh-cn': require('./i18n/zh-cn.json'),\n        };\n\n        // merge together\n        if (settings && settings.translations) {\n            Object.keys(settings.translations).forEach(lang => translations[lang] = Object.assign(translations[lang], settings.translations[lang]));\n        } else if (props.translations) {\n            Object.keys(props.translations).forEach(lang => translations[lang] = Object.assign(translations[lang], props.translations[lang]));\n        }\n\n        I18n.setTranslations(translations);\n\n        this.savedNative = {}; // to detect if the config changed\n\n        this.encryptedFields = props.encryptedFields || settings?.encryptedFields || [];\n\n        this.sentryDSN = (settings && settings.sentryDSN) || props.sentryDSN;\n\n        if (window.socketUrl) {\n            if (window.socketUrl.startsWith(':')) {\n                window.socketUrl = `${window.location.protocol}//${window.location.hostname}${window.socketUrl}`;\n            } else if (!window.socketUrl.startsWith('http://') && !window.socketUrl.startsWith('https://')) {\n                window.socketUrl = `${window.location.protocol}//${window.socketUrl}`;\n            }\n        }\n\n        this.alerDialogRendered = false;\n\n        window.oldAlert = window.alert;\n        window.alert = message => {\n            if (!this.alerDialogRendered) {\n                window.oldAlert(message);\n                return;\n            }\n            if (message && message.toString().toLowerCase().includes('error')) {\n                console.error(message);\n                this.showAlert(message.toString(), 'error');\n            } else {\n                console.log(message);\n                this.showAlert(message.toString(), 'info');\n            }\n        };\n\n        this.socket = new ConnectionClass({\n            ...(props?.socket || settings?.socket),\n            name: this.adapterName,\n            doNotLoadAllObjects: settings?.doNotLoadAllObjects,\n            onProgress: progress => {\n                if (progress === PROGRESS.CONNECTING) {\n                    this.setState({ connected: false });\n                } else if (progress === PROGRESS.READY) {\n                    this.setState({ connected: true });\n                } else {\n                    this.setState({ connected: true });\n                }\n            },\n            onReady: (/* objects, scripts */) => {\n                I18n.setLanguage(this.socket.systemLang);\n\n                // subscribe because of language and expert mode\n                this.socket.subscribeObject('system.config', this.onSystemConfigChanged)\n                    .then(() => this.getSystemConfig())\n                    .then(obj => {\n                        this._secret = (typeof obj !== 'undefined' && obj.native && obj.native.secret) || 'Zgfr56gFe87jJOM';\n                        this._systemConfig = obj?.common || {};\n                        return this.socket.getObject(this.instanceId);\n                    })\n                    .then(instanceObj => {\n                        let waitPromise;\n\n                        const sentryEnabled =\n                            this._systemConfig.diag !== 'none' &&\n                            instanceObj &&\n                            instanceObj.common &&\n                            instanceObj.common.name &&\n                            instanceObj.common.version &&\n                            !instanceObj.common.disableDataReporting &&\n                            window.location.host !== 'localhost:3000';\n\n                        // activate sentry plugin\n                        if (!this.sentryStarted && this.sentryDSN && sentryEnabled) {\n                            this.sentryStarted = true;\n\n                            Sentry.init({\n                                dsn: this.sentryDSN,\n                                release: `iobroker.${instanceObj.common.name}@${instanceObj.common.version}`,\n                                integrations: [\n                                    new SentryIntegrations.Dedupe(),\n                                ],\n                            });\n                        }\n\n                        // read UUID and init sentry with it.\n                        // for backward compatibility it will be processed separately from above logic: some adapters could still have this.sentryDSN as undefined\n                        if (!this.sentryInited && sentryEnabled) {\n                            this.sentryInited = true;\n\n                            waitPromise = this.socket.getObject('system.meta.uuid')\n                                .then(uuidObj => {\n                                    if (uuidObj && uuidObj.native && uuidObj.native.uuid) {\n                                        Sentry.configureScope(scope =>\n                                            scope.setUser({ id: uuidObj.native.uuid }));\n                                    }\n                                });\n                        }\n\n                        waitPromise = waitPromise || Promise.resolve();\n\n                        waitPromise\n                            .then(() => {\n                                if (instanceObj) {\n                                    this.common = instanceObj?.common;\n                                    this.onPrepareLoad(instanceObj.native, instanceObj.encryptedNative); // decode all secrets\n                                    this.savedNative = JSON.parse(JSON.stringify(instanceObj.native));\n                                    this.setState({ native: instanceObj.native, loaded: true, expertMode: this.getExpertMode() }, () =>\n                                        this.onConnectionReady && this.onConnectionReady());\n                                } else {\n                                    console.warn('Cannot load instance settings');\n                                    this.setState(\n                                        {\n                                            native: {},\n                                            loaded: true,\n                                            expertMode: this.getExpertMode(),\n                                        },\n                                        () => this.onConnectionReady && this.onConnectionReady(),\n                                    );\n                                }\n                            });\n                    })\n                    .catch(e => window.alert(`Cannot settings: ${e}`));\n            },\n            onError: err => {\n                console.error(err);\n                this.showError(err);\n            },\n        });\n    }\n\n    showAlert(message, type) {\n        if (type !== 'error' && type !== 'warning' && type !== 'info' && type !== 'success') {\n            type = 'info';\n        }\n\n        this.setState({\n            _alert: true,\n            _alertType: type,\n            _alertMessage: message,\n        });\n    }\n\n    renderAlertSnackbar() {\n        this.alerDialogRendered = true;\n\n        return <Snackbar\n            style={this.state._alertType === 'error' ?\n                { backgroundColor: '#f44336' } :\n                (this.state._alertType === 'success' ? { backgroundColor: '#4caf50' } : undefined)}\n            open={this.state._alert}\n            autoHideDuration={6000}\n            onClose={reason => reason !== 'clickaway' && this.setState({ _alert: false })}\n            message={this.state.alertMessage}\n        />;\n    }\n\n    onSystemConfigChanged = (id, obj) => {\n        if (obj && id === 'system.config') {\n            if (this.socket.systemLang !== obj?.common.language) {\n                this.socket.systemLang = obj?.common.language || 'en';\n                I18n.setLanguage(this.socket.systemLang);\n            }\n\n            if (this._systemConfig.expertMode !== !!obj?.common?.expertMode) {\n                this._systemConfig = obj?.common || {};\n                this.setState({ expertMode: this.getExpertMode() });\n            } else {\n                this._systemConfig = obj?.common || {};\n            }\n        }\n    };\n\n    /**\n     * Called immediately after a component is mounted. Setting state here will trigger re-rendering.\n     */\n    componentDidMount() {\n        window.addEventListener('resize', this.onResize, true);\n        window.addEventListener('message', this.onReceiveMessage, false);\n        super.componentDidMount();\n    }\n\n    /**\n     * Called immediately before a component is destroyed.\n     */\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.onResize, true);\n        window.removeEventListener('message', this.onReceiveMessage, false);\n        super.componentWillUnmount();\n    }\n\n    onReceiveMessage = message => {\n        if (message?.data) {\n            if (message.data === 'updateTheme') {\n                const newThemeName = Utils.getThemeName();\n                Utils.setThemeName(Utils.getThemeName());\n\n                const newTheme = this.createTheme(newThemeName);\n\n                this.setState({\n                    theme: newTheme,\n                    themeName: this.getThemeName(newTheme),\n                    themeType: this.getThemeType(newTheme),\n                }, () => {\n                    this.props.onThemeChange && this.props.onThemeChange(newThemeName);\n                    this.onThemeChanged && this.onThemeChanged(newThemeName);\n                });\n            } else if (message.data === 'updateExpertMode') {\n                this.onToggleExpertMode && this.onToggleExpertMode(this.getExpertMode());\n            } else if (message.data !== 'chartReady') { // if not \"echart ready\" message\n                console.debug(`Received unknown message: \"${JSON.stringify(message.data)}\". May be it will be processed later`);\n            }\n        }\n    };\n\n    /**\n     * @private\n     */\n    onResize = () => {\n        this.resizeTimer && clearTimeout(this.resizeTimer);\n        this.resizeTimer = setTimeout(() => {\n            this.resizeTimer = null;\n            this.setState({ width: GenericApp.getWidth() });\n        }, 200);\n    };\n\n    /**\n     * Gets the width depending on the window inner width.\n     * @returns {import('./types').Width}\n     */\n    static getWidth() {\n        /**\n         * innerWidth |xs      sm      md      lg      xl\n         *            |-------|-------|-------|-------|------>\n         * width      |  xs   |  sm   |  md   |  lg   |  xl\n         */\n\n        const SIZES = {\n            xs: 0,\n            sm: 600,\n            md: 960,\n            lg: 1280,\n            xl: 1920,\n        };\n        const width = window.innerWidth;\n        const keys = Object.keys(SIZES).reverse();\n        const widthComputed = keys.find(key => width >= SIZES[key]);\n\n        return widthComputed || 'xs';\n    }\n\n    /**\n     * Get a theme\n     * @param {string} name Theme name\n     * @returns {import('./types').Theme}\n     */\n    createTheme(name = '') {\n        return theme(Utils.getThemeName(name));\n    }\n\n    /**\n     * Get the theme name\n     * @param {import('./types').Theme} currentTheme Theme\n     * @returns {string} Theme name\n     */\n    getThemeName(currentTheme) {\n        return currentTheme.name;\n    }\n\n    /**\n     * Get the theme type\n     * @param {import('./types').Theme} currentTheme Theme\n     * @returns {string} Theme type\n     */\n    getThemeType(currentTheme) {\n        return currentTheme.palette.mode;\n    }\n\n    /**\n     * Changes the current theme\n     * @param {string} newThemeName Theme name\n     **/\n    toggleTheme(newThemeName) {\n        const themeName = this.state.themeName;\n\n        // dark => blue => colored => light => dark\n        newThemeName = newThemeName || (themeName === 'dark' ? 'blue' :\n            (themeName === 'blue' ? 'colored' :\n                (themeName === 'colored' ? 'light' : 'dark')));\n\n        if (newThemeName !== themeName) {\n            Utils.setThemeName(newThemeName);\n\n            const newTheme = this.createTheme(newThemeName);\n\n            this.setState({\n                theme: newTheme,\n                themeName: this.getThemeName(newTheme),\n                themeType: this.getThemeType(newTheme),\n            }, () => {\n                this.props.onThemeChange && this.props.onThemeChange(newThemeName);\n                this.onThemeChanged && this.onThemeChanged(newThemeName);\n            });\n        }\n    }\n\n    /**\n     * Gets the system configuration.\n     * @returns {Promise<ioBroker.OtherObject>}\n     */\n    getSystemConfig() {\n        return this.socket.getSystemConfig();\n    }\n\n    /**\n     * Get current expert mode\n     * @returns {boolean}\n     */\n    getExpertMode() {\n        return window.sessionStorage.getItem('App.expertMode') === 'true' || !!this._systemConfig.expertMode;\n    }\n\n    /**\n     * Gets called when the socket.io connection is ready.\n     * You can overload this function to execute own commands.\n     */\n    onConnectionReady() {\n    }\n\n    /**\n     * Encrypts a string.\n     * @param {string} value\n     * @returns {string}\n     */\n    encrypt(value) {\n        let result = '';\n        for (let i = 0; i < value.length; i++) {\n            result += String.fromCharCode(this._secret[i % this._secret.length].charCodeAt(0) ^ value.charCodeAt(i));\n        }\n        return result;\n    }\n\n    /**\n     * Decrypts a string.\n     * @param {string} value\n     * @returns {string}\n     */\n    decrypt(value) {\n        let result = '';\n        for (let i = 0; i < value.length; i++) {\n            result += String.fromCharCode(this._secret[i % this._secret.length].charCodeAt(0) ^ value.charCodeAt(i));\n        }\n        return result;\n    }\n\n    /**\n     * Gets called when the navigation hash changes.\n     * You may override this if needed.\n     */\n    onHashChanged() {\n        const location = Router.getLocation();\n        if (location.tab !== this.state.selectedTab) {\n            this.selectTab(location.tab);\n        }\n    }\n\n    /**\n     * Selects the given tab.\n     * @param {string} tab\n     * @param {number} [index]\n     */\n    selectTab(tab, index) {\n        (window._localStorage || window.localStorage).setItem(`${this.adapterName}-adapter`, tab);\n        this.setState({ selectedTab: tab, selectedTabNum: index });\n    }\n\n    /**\n     * Gets called before the settings are saved.\n     * You may override this if needed.\n     * @param {Record<string, any>} settings\n     */\n    onPrepareSave(settings) {\n        // here you can encode values\n        this.encryptedFields && this.encryptedFields.forEach(attr => {\n            if (settings[attr]) {\n                settings[attr] = this.encrypt(settings[attr]);\n            }\n        });\n\n        return true;\n    }\n\n    /**\n     * Gets called after the settings are loaded.\n     * You may override this if needed.\n     * @param {Record<string, any>} settings\n     * @param {string[]} encryptedNative optional list of fields to be decrypted\n     */\n    onPrepareLoad(settings, encryptedNative) {\n        // here you can encode values\n        this.encryptedFields && this.encryptedFields.forEach(attr => {\n            if (settings[attr]) {\n                settings[attr] = this.decrypt(settings[attr]);\n            }\n        });\n        encryptedNative && encryptedNative.forEach(attr => {\n            this.encryptedFields = this.encryptedFields || [];\n            !this.encryptedFields.includes(attr) && this.encryptedFields.push(attr);\n            if (settings[attr]) {\n                settings[attr] = this.decrypt(settings[attr]);\n            }\n        });\n    }\n\n    /**\n     * Gets the extendable instances.\n     * @returns {Promise<any[]>}\n     */\n    getExtendableInstances() {\n        return new Promise(resolve => {\n            this.socket._socket.emit('getObjectView', 'system', 'instance', null, (err, doc) => {\n                if (err) {\n                    resolve([]);\n                } else {\n                    resolve(doc.rows\n                        .filter(item => item.value.common.webExtendable)\n                        .map(item => item.value));\n                }\n            });\n        });\n    }\n\n    /**\n     * Gets the IP addresses of the given host.\n     * @param {string} host\n     */\n    getIpAddresses(host) {\n        return new Promise(resolve => {\n            this.socket._socket.emit('getHostByIp', host || this.common.host, (ip, _host) => {\n                const IPs4 = [{ name: `[IPv4] 0.0.0.0 - ${I18n.t('ra_Listen on all IPs')}`, address: '0.0.0.0', family: 'ipv4' }];\n                const IPs6 = [{ name: '[IPv6] ::', address: '::', family: 'ipv6' }];\n                if (_host) {\n                    host = _host;\n                    if (host.native.hardware && host.native.hardware.networkInterfaces) {\n                        Object.keys(host.native.hardware.networkInterfaces).forEach(eth =>\n                            host.native.hardware.networkInterfaces[eth].forEach(inter => {\n                                if (inter.family !== 'IPv6') {\n                                    IPs4.push({ name: `[${inter.family}] ${inter.address} - ${eth}`, address: inter.address, family: 'ipv4' });\n                                } else {\n                                    IPs6.push({ name: `[${inter.family}] ${inter.address} - ${eth}`, address: inter.address, family: 'ipv6' });\n                                }\n                            }));\n                    }\n                    IPs6.forEach(_ip => IPs4.push(_ip));\n                }\n                resolve(IPs4);\n            });\n        });\n    }\n\n    /**\n     * Saves the settings to the server.\n     * @param {boolean} isClose True if the user is closing the dialog.\n     */\n    onSave(isClose) {\n        let oldObj;\n        if (this.state.isConfigurationError) {\n            this.setState({ errorText: this.state.isConfigurationError });\n            return;\n        }\n\n        this.socket.getObject(this.instanceId)\n            .then(_oldObj => {\n                oldObj = _oldObj || {};\n\n                for (const a in this.state.native) {\n                    if (Object.prototype.hasOwnProperty.call(this.state.native, a)) {\n                        if (this.state.native[a] === null) {\n                            oldObj.native[a] = null;\n                        } else if (this.state.native[a] !== undefined) {\n                            oldObj.native[a] = JSON.parse(JSON.stringify(this.state.native[a]));\n                        } else {\n                            delete oldObj.native[a];\n                        }\n                    }\n                }\n\n                if (this.state.common) {\n                    for (const b in this.state.common) {\n                        if (this.state.common[b] === null) {\n                            oldObj.common[b] = null;\n                        } else if (this.state.common[b] !== undefined) {\n                            oldObj.common[b] = JSON.parse(JSON.stringify(this.state.common[b]));\n                        } else {\n                            delete oldObj.common[b];\n                        }\n                    }\n                }\n\n                if (this.onPrepareSave(oldObj.native) !== false) {\n                    return this.socket.setObject(this.instanceId, oldObj);\n                }\n\n                return Promise.reject(new Error('Invalid configuration'));\n            })\n            .then(() => {\n                this.savedNative = oldObj.native;\n                globalThis.changed = false;\n                try {\n                    window.parent.postMessage('nochange', '*');\n                } catch (e) {\n                    // ignore\n                }\n\n                this.setState({ changed: false });\n                isClose && GenericApp.onClose();\n            })\n            .catch(e => console.error(`Cannot save configuration: ${e}`));\n    }\n\n    /**\n     * Renders the toast.\n     * @returns {JSX.Element | null} The JSX element.\n     */\n    renderToast() {\n        if (!this.state.toast) {\n            return null;\n        }\n\n        return <Snackbar\n            anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left',\n            }}\n            open={!0}\n            autoHideDuration={6000}\n            onClose={() => this.setState({ toast: '' })}\n            ContentProps={{ 'aria-describedby': 'message-id' }}\n            message={<span id=\"message-id\">{this.state.toast}</span>}\n            action={[\n                <IconButton\n                    key=\"close\"\n                    aria-label=\"Close\"\n                    color=\"inherit\"\n                    className={this.props.classes.close}\n                    onClick={() => this.setState({ toast: '' })}\n                    size=\"large\"\n                >\n                    <IconClose />\n                </IconButton>,\n            ]}\n        />;\n    }\n\n    /**\n     * Closes the dialog.\n     * @private\n     */\n    static onClose() {\n        if (typeof window.parent !== 'undefined' && window.parent) {\n            try {\n                if (window.parent.$iframeDialog && typeof window.parent.$iframeDialog.close === 'function') {\n                    window.parent.$iframeDialog.close();\n                } else {\n                    window.parent.postMessage('close', '*');\n                }\n            } catch (e) {\n                window.parent.postMessage('close', '*');\n            }\n        }\n    }\n\n    /**\n     * Renders the error dialog.\n     * @returns {JSX.Element | null} The JSX element.\n     */\n    renderError() {\n        if (!this.state.errorText) {\n            return null;\n        }\n\n        return <DialogError text={this.state.errorText} onClose={() => this.setState({ errorText: '' })} />;\n    }\n\n    /**\n     * Checks if the configuration has changed.\n     * @param {Record<string, any>} [native] the new state\n     */\n    getIsChanged(native) {\n        native = native || this.state.native;\n        const isChanged =  JSON.stringify(native) !== JSON.stringify(this.savedNative);\n\n        globalThis.changed = isChanged;\n\n        return isChanged;\n    }\n\n    /**\n     * Gets called when loading the configuration.\n     * @param {Record<string, any>} newNative The new configuration object.\n     */\n    onLoadConfig(newNative) {\n        if (JSON.stringify(newNative) !== JSON.stringify(this.state.native)) {\n            this.setState({ native: newNative, changed: this.getIsChanged(newNative) });\n        }\n    }\n\n    /**\n     * Sets the configuration error.\n     * @param {string} errorText\n     */\n    setConfigurationError(errorText) {\n        if (this.state.isConfigurationError !== errorText) {\n            this.setState({ isConfigurationError: errorText });\n        }\n    }\n\n    /**\n     * Renders the save and close buttons.\n     * @returns {JSX.Element | undefined} The JSX element.\n     */\n    renderSaveCloseButtons() {\n        if (!this.state.confirmClose && !this.state.bottomButtons) {\n            return null;\n        }\n\n        return <>\n            {this.state.bottomButtons ? <SaveCloseButtons\n                theme={this.state.theme}\n                newReact={this.newReact}\n                noTextOnButtons={this.state.width === 'xs' || this.state.width === 'sm' || this.state.width === 'md'}\n                changed={this.state.changed}\n                onSave={isClose => this.onSave(isClose)}\n                onClose={() => {\n                    if (this.state.changed) {\n                        this.setState({ confirmClose: true });\n                    } else {\n                        GenericApp.onClose();\n                    }\n                }}\n            /> : null}\n            {this.state.confirmClose ? <ConfirmDialog\n                title={I18n.t('ra_Please confirm')}\n                text={I18n.t('ra_Some data are not stored. Discard?')}\n                ok={I18n.t('ra_Discard')}\n                cancel={I18n.t('ra_Cancel')}\n                onClose={isYes =>\n                    this.setState({ confirmClose: false }, () =>\n                        isYes && GenericApp.onClose())}\n            /> : null}\n        </>;\n    }\n\n    /**\n     * @private\n     * @param {Record<string, any>} obj\n     * @param {any} attrs\n     * @param {any} value\n     * @returns {boolean | undefined}\n     */\n    _updateNativeValue(obj, attrs, value) {\n        if (typeof attrs !== 'object') {\n            attrs = attrs.split('.');\n        }\n        const attr = attrs.shift();\n        if (!attrs.length) {\n            if (value && typeof value === 'object') {\n                if (JSON.stringify(obj[attr]) !== JSON.stringify(value)) {\n                    obj[attr] = value;\n                    return true;\n                }\n                return false;\n            }\n            if (obj[attr] !== value) {\n                obj[attr] = value;\n                return true;\n            }\n\n            return false;\n        }\n\n        obj[attr] = obj[attr] || {};\n        if (typeof obj[attr] !== 'object') {\n            throw new Error(`attribute ${attr} is no object, but ${typeof obj[attr]}`);\n        }\n        return this._updateNativeValue(obj[attr], attrs, value);\n    }\n\n    /**\n     * Update the native value\n     * @param {string} attr The attribute name with dots as delimiter.\n     * @param {any} value The new value.\n     * @param {(() => void)} [cb] Callback which will be called upon completion.\n     */\n    updateNativeValue(attr, value, cb) {\n        const native = JSON.parse(JSON.stringify(this.state.native));\n        if (this._updateNativeValue(native, attr, value)) {\n            const changed = this.getIsChanged(native);\n\n            if (changed !== this.state.changed) {\n                try {\n                    window.parent.postMessage(changed ? 'change' : 'nochange', '*');\n                } catch (e) {\n                    // ignore\n                }\n            }\n\n            this.setState({ native, changed }, cb);\n        }\n    }\n\n    /**\n     * Set the error text to be shown.\n     * @param {string | JSX.Element} text\n     */\n    showError(text) {\n        this.setState({ errorText: text });\n    }\n\n    /**\n     * Sets the toast to be shown.\n     * @param {string} toast\n     */\n    showToast(toast) {\n        this.setState({ toast });\n    }\n\n    /**\n     * Renders helper dialogs\n     * @returns {JSX.Element} The JSX element.\n     */\n    renderHelperDialogs() {\n        return <>\n            {this.renderError()}\n            {this.renderToast()}\n            {this.renderSaveCloseButtons()}\n            {this.renderAlertSnackbar()}\n        </>;\n    }\n\n    /**\n     * Renders this component.\n     * @returns {JSX.Element} The JSX element.\n     */\n    render() {\n        if (!this.state.loaded) {\n            return <Loader theme={this.state.themeType} />;\n        }\n\n        return <div className=\"App\">\n            {this.renderError()}\n            {this.renderToast()}\n            {this.renderSaveCloseButtons()}\n            {this.renderAlertSnackbar()}\n        </div>;\n    }\n}\n\nGenericApp.propTypes = {\n    adapterName: PropTypes.string, // (optional) name of adapter\n    onThemeChange: PropTypes.func, // (optional) called by theme change\n    socket: PropTypes.object, // (optional) socket information (host, port)\n    encryptedFields: PropTypes.array, // (optional) list of native attributes that must be encrypted\n    bottomButtons: PropTypes.bool, // If the bottom buttons (Save/Close) must be shown\n    Connection: PropTypes.object, // If the bottom buttons (Save/Close) must be shown\n};\n\nexport default GenericApp;\n"],"mappings":"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"}