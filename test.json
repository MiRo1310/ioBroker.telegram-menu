{
  "data": {
    "1_Gruppe_1": {
      "32": {
        "echarts": [
          {
            "preset": "echarts.0.Stromverbrauch_heute",
            "echartInstance": "echarts.0",
            "background": "#FFFFFF",
            "theme": "light",
            "filename": "echarts-temp-photo.jpg"
          }
        ]
      },
      "√úbersicht": {
        "nav": [
          [
            "√úbersicht"
          ],
          [
            "Allgemeine_Tests",
            "Test Menu"
          ],
          [
            "Menus",
            "Datenpunkte",
            "GetState",
            "SetState",
            "Zur√ºck1",
            "Zur√ºck5",
            "Rolladen",
            "ButtonInOneLine"
          ],
          [
            "Versuch"
          ]
        ],
        "text": "√úbersicht",
        "parse_mode": false
      },
      "Rolladen": {
        "nav": [
          [
            "Esszimmer"
          ],
          [
            "√úbersicht",
            "Zur√ºck",
            "üè†TestZur√ºckStatus"
          ]
        ],
        "text": "Aktueller Wert: <b> {status:'id':'0_userdata.0.boolean'} %</b>  ",
        "parse_mode": true
      },
      "Datenpunkte": {
        "nav": [
          [
            "√úbersicht"
          ],
          [
            "event",
            "eventValueSet",
            "deleteRequests",
            "httpRequest"
          ],
          [
            "setDynamicValue",
            "dynamic"
          ],
          [
            "string",
            "boolean",
            "number1",
            "number2",
            "zahl2",
            "time",
            "fehler"
          ],
          [
            "Getdecimal",
            "Iobroker",
            "Zeitstempel",
            "jsonTable",
            "Timestamp"
          ],
          [
            "Zur√ºck"
          ]
        ],
        "text": "W√§hle Datenpunkt <b> {status:0_userdata.0.boolean} %<  /b>      Monitore sind aktuell auf  \\n  ashfdfg dfgdhfgdfg  \\n Test",
        "parse_mode": true
      },
      "Menus": {
        "nav": [
          [
            "√úbersicht",
            "Zur√ºck",
            "1"
          ],
          [
            "json2",
            "jsonTextTable2"
          ]
        ],
        "text": "Choose an action",
        "parse_mode": false
      },
      "Zur√ºck1": {
        "nav": [
          [
            "Zur√ºck2",
            "Zur√ºck3",
            "Zur√ºck"
          ],
          [
            ""
          ]
        ]
      },
      "text": "Zur√ºck 1",
      "parse_mode": false
    },
    "Zur√ºck2": {
      "nav": [
        [
          "Zur√ºck3",
          "Zur√ºck"
        ],
        [
          ""
        ]
      ],
      "text": "Zur√ºck2",
      "parse_mode": false
    },
    "fehler": {
      "nav": [
        [
          "√úbersicht"
        ],
        [
          ""
        ]
      ],
      "text": "Zirku ein- oder ausschalten?  \\n Aktueller Status Zirku Single: {status:0_userdata.0.boolean'} change{'true':'EIN','false':'AUS'}\\n Event: {status:'id':'0_userdata.0.event':false} \\n Aktueller Status Zirku Familie: \\n\\n {status:0_userdata.0.bo    olean2'} change{'true':'EIN','false':'AUS'} \\n Boolean2: {status:'id':'0_userdata.0.boolean2'} change{\"true\":\"an\",\"false\":\"aus\"} \\n ABd\\n",
      "parse_mode": false
    },
    "TestSubmenu": {
      "nav": [
        [
          "menu:number16-26-2-¬∞C:Temperatu   r_Wohnzimmer:"
        ],
        [
          ""
        ]
      ],
      "text": "chooseAction",
      "parse_mode": false
    },
    "abs": {
      "nav": [
        [
          "Rolladen",
          "a",
          "b"
        ],
        [
          ""
        ]
      ],
      "text": "chooseAction",
      "parse_mode": false
    },
    "setEventValue": {
      "switch": [
        {
          "id": "0_userdata.0.number1",
          "value": "-",
          "toggle": false,
          "confirm": "true",
          "returnText": "Event Datenpunkt wurde auf && gesetzt",
          "ack": "false",
          "parse_mode": false
        }
      ]
    },
    "setEvent2": {
      "switch": [
        {
          "id": "0_userdata.0.boolean",
          "value": "-",
          "toggle": false,
          "confirm": "true",
          "returnText": "Value : &&",
          "ack": "false",
          "parse_mode": false
        }
      ]
    },
    "Licht": {
      "sendPic": [
        {
          "id": "false",
          "fileName": "false",
          "delay": "false"
        }
      ]
    },
    "Test": {
      "sendPic": [
        {
          "id": "http://192.168.1.4:3000/render/d-solo/Biuksv-4k/strom?orgId=1&amp;panelId=8&amp;width=1000&amp;height=500&amp;tz=Europe%2FBerlin",
          "fileName": "grafana1.png ",
          "delay": "10000"
        }
      ]
    }
  },
  "Delete": {
    "": {
      "nav": [
        [
          "-"
        ],
        [
          ""
        ]
      ],
      "text": "Choose an action",
      "parse_mode": false
    },
    "Delete": {
      "nav": [
        [
          "deleteRequests",
          "deleteRequestsLast5Stay",
          "deleteRequestsLast"
        ],
        [
          ""
        ]
      ],
      "text": "Choose an action",
      "parse_mode": false
    },
    "deleteRequestsLast5Stay": {
      "nav": [
        [
          "menu:deleteLeaveLastStanding:√úbersicht:5"
        ],
        [
          ""
        ]
      ],
      "text": "Choose an action",
      "parse_mode": false
    },
    "deleteRequestsLast": {
      "nav": [
        [
          "menu:deleteLast:√úbersicht"
        ],
        [
          ""
        ]
      ],
      "text": "Choose an action",
      "parse_mode": false
    },
    "deleteRequests": {
      "nav": [
        [
          "menu:deleteAll:√úbersicht"
        ],
        [
          ""
        ]
      ],
      "text": "Choose an action",
      "parse_mode": false
    },
    "Zur√ºck5": {
      "nav": [
        [
          "Zur√ºck4",
          "Zur√ºck"
        ],
        [
          ""
        ]
      ],
      "text": "Choose an action",
      "parse_mode": false
    }
  },
  "Submenu": {
    "-": {
      "nav": [
        [
          ""
        ],
        [
          ""
        ]
      ],
      "text": "Choose an action",
      "parse_mode": false
    },
    "number1": {
      "nav": [
        [
          "menu:number20-23-1-:numberA:"
        ],
        [
          ""
        ]
      ],
      "text": "Wert ist bei <b> {status:'id':'0_userdata.0.number1'}</b>",
      "parse_mode": true
    },
    "number2": {
      "nav": [
        [
          "menu:number(-)2-2-1-%:numberB:"
        ],
        [
          ""
        ]
      ],
      "text": "W√§hle eine Aktion",
      "parse_mode": false
    },
    "number3": {
      "nav": [
        [
          "menu:number24-16-0.5-¬∞C:numberC:"
        ],
        [
          ""
        ]
      ],
      "text": "W√§hle eine Aktion",
      "parse_mode": false
    },
    "percent1": {
      "nav": [
        [
          "menu:percent5:percentA:"
        ],
        [
          ""
        ]
      ],
      "text": "W√§hle eine Aktion",
      "parse_mode": false
    },
    "Esszimmer": {
      "nav": [
        [
          "menu:percent10:r1:"
        ],
        [
          ""
        ]
      ],
      "text": "Aktueller Wert: {status:'id':'0_userdata.0.number1'} %",
      "parse_mode": false
    },
    "Switch1": {
      "nav": [
        [
          "menu:switch-ein.true-aus.false:switchA:"
        ],
        [
          ""
        ]
      ],
      "text": "W√§hle eine Aktion",
      "parse_mode": false
    },
    "Monitore": {
      "nav": [
        [
          "menu:switch-ein.true-aus.false:monitoreSchalten:"
        ],
        [
          ""
        ]
      ],
      "text": "W√§hle eine Aktion {status:'id':'0_userdata.0.Test'}",
      "parse_mode": false
    },
    "event2": {
      "nav": [
        [
          "menu:switch-ein.true-aus.false:setEvent2:"
        ],
        [
          ""
        ]
      ],
      "text": "Choose an action",
      "parse_mode": false
    },
    "eventValueSet": {
      "nav": [
        [
          "menu:dynSwitch[Ausl√∂ser Event | 12",
          "dezimal | 12.5 ]:setEventValue::"
        ],
        [
          ""
        ]
      ],
      "text": "Choose an action",
      "parse_mode": false
    },
    "event": {
      "nav": [
        [
          "menu:dynSwitch[Name1.value1",
          "Name2.value2]:TRIGGER:LengthOfRow:"
        ],
        [
          ""
        ]
      ],
      "text": "Choose an action",
      "parse_mode": false
    },
    "dynamic": {
      "nav": [
        [
          "menu:dynSwitch[{status:'id':0_userdata.0.number1:true}|a",
          "ButtonB|b",
          "c",
          "d",
          "e",
          "f",
          "g",
          "h",
          "i",
          "j",
          "k",
          "l]:dynamicMenu2:5:"
        ],
        [
          ""
        ]
      ],
      "text": "Choose an action",
      "parse_mode": false
    },
    "Zur√ºck": {
      "nav": [
        [
          "menu:back"
        ],
        [
          ""
        ]
      ],
      "text": "W√§hle eine Aktion",
      "parse_mode": false
    }
  },
  "SetState": {
    "-": {
      "nav": [
        [
          ""
        ],
        [
          ""
        ]
      ],
      "text": "Choose an action",
      "parse_mode": false
    },
    "SetState": {
      "nav": [
        [
          "SetAndGetValueFromAnotherState",
          "SetAndGetValueFromAnotherStateWithText"
        ],
        [
          "setBool",
          "√úbersicht",
          "deleteRequests",
          "SwitchNumberFloat",
          "testset"
        ],
        [
          "Allgemeines SetState"
        ]
      ],
      "text": "W√§hle eine Aktion",
      "parse_mode": false
    },
    "SwitchNumberFloat": {
      "nav": [
        [
          "menu:number26.5-29.5-0.5-%:TRIGGER:"
        ],
        [
          ""
        ]
      ],
      "text": "Choose an action",
      "parse_mode": false
    },
    "Allgemeines SetState": {
      "nav": [
        [
          "Boolean1",
          "Number1",
          "String1",
          "BooleanToogle",
          "boolean",
          "boolean2"
        ],
        [
          ""
        ]
      ],
      "text": "Choose an action",
      "parse_mode": false
    },
    "SetAndGetValueFromAnotherState": {
      "switch": [
        {
          "id": "0_userdata.0.Pumpe",
          "value": "-",
          "toggle": true,
          "confirm": "true",
          "returnText": "{'id':'0_userdata.0.Neuer_Zustand','text':''}",
          "ack": "false",
          "parse_mode": false
        }
      ]
    },
    "SetAndGetValueFromAnotherStateWithText": {
      "switch": [
        {
          "id": "0_userdata.0.Pumpe",
          "value": "!",
          "toggle": false,
          "confirm": "true",
          "returnText": "Test neu und noch einer {'id':'0_userdata.0.Neuer_Zustand','text':''}",
          "ack": "false",
          "parse_mode": false
        }
      ]
    },
    "setBool": {
      "switch": [
        {
          "id": "0_userdata.0.boolean",
          "value": "-",
          "toggle": true,
          "confirm": "true",
          "returnText": "Wert wurde auf <b>&&</b> gesetzt",
          "ack": "true",
          "parse_mode": true
        }
      ]
    },
    "boolean2": {
      "switch": [
        {
          "id": "0_userdata.0.boolean",
          "value": "true",
          "toggle": false,
          "confirm": "true",
          "returnText": " {confirmSet:The value has been set:noValue}Wert wurde auf <b>&&</b> gesetzt ",
          "ack": "false",
          "parse_mode": true
        }
      ]
    },
    "boolean": {
      "switch": [
        {
          "id": "0_userdata.0.boolean",
          "value": "false",
          "toggle": false,
          "confirm": "true",
          "returnText": " {confirmSet:The value has been set \"&&\":}",
          "ack": "false",
          "parse_mode": false
        }
      ]
    },
    "zahl2": {
      "switch": [
        {
          "id": "0_userdata.0.Zahl",
          "value": "1000",
          "toggle": false,
          "confirm": "true",
          "returnText": "&&",
          "ack": "false",
          "parse_mode": false
        }
      ]
    },
    "string": {
      "switch": [
        {
          "id": "0_userdata.0.string",
          "value": "Test {id:ID}",
          "toggle": false,
          "confirm": "false",
          "returnText": "-",
          "ack": "false",
          "parse_mode": false
        }
      ]
    },
    "dynamicMenu2": {
      "switch": [
        {
          "id": "0_userdata.0.dynamischer_Wert",
          "value": "-",
          "toggle": false,
          "confirm": "true",
          "returnText": "Wert wurde auf && gesetzt",
          "ack": "true",
          "parse_mode": false
        }
      ]
    },
    "Iobroker": {
      "switch": [
        {
          "id": "0_userdata.0.Test",
          "value": "-",
          "toggle": true,
          "confirm": "true",
          "returnText": "Wert wurde auf <b>&&</b> gesetzt change{'true':'an', 'false':'aus'}",
          "ack": "true",
          "parse_mode": true
        }
      ]
    },
    "R0": {
      "switch": [
        {
          "id": "0_userdata.0.Neuer_Zustand",
          "value": "Rollo0={value}",
          "toggle": false,
          "confirm": "true",
          "returnText": "Wert wurde auf &&",
          "ack": "false",
          "parse_mode": false
        }
      ]
    },
    "a": {
      "switch": [
        {
          "id": "f",
          "value": "f",
          "toggle": false,
          "confirm": "false",
          "returnText": "f",
          "ack": "false",
          "parse_mode": false
        },
        {
          "id": "g",
          "value": "g",
          "toggle": false,
          "confirm": "false",
          "returnText": "g",
          "ack": "false",
          "parse_mode": false
        },
        {
          "id": "g",
          "value": "g",
          "toggle": false,
          "confirm": "false",
          "returnText": "g",
          "ack": "false",
          "parse_mode": false
        },
        {
          "id": "g",
          "value": "g",
          "toggle": false,
          "confirm": "false",
          "returnText": "g",
          "ack": "false",
          "parse_mode": false
        },
        {
          "id": "g",
          "value": "g",
          "toggle": false,
          "confirm": "false",
          "returnText": "g",
          "ack": "false",
          "parse_mode": false
        },
        {
          "id": "g",
          "value": "g",
          "toggle": false,
          "confirm": "false",
          "returnText": "g",
          "ack": "false",
          "parse_mode": false
        },
        {
          "id": "g",
          "value": "g",
          "toggle": false,
          "confirm": "false",
          "returnText": "g",
          "ack": "false",
          "parse_mode": false
        },
        {
          "id": "g",
          "value": "g",
          "toggle": false,
          "confirm": "false",
          "returnText": "g",
          "ack": "false",
          "parse_mode": false
        },
        {
          "id": "g",
          "value": "g",
          "toggle": false,
          "confirm": "false",
          "returnText": "g",
          "ack": "false",
          "parse_mode": false
        }
      ]
    },
    "setDynamicValue": {
      "switch": [
        {
          "id": "0_userdata.0.number1",
          "value": "-",
          "toggle": false,
          "confirm": "true",
          "returnText": "{setDynamicValue:Bitte Wert eingeben:number:Wert wurde auf && gesetzt:√úbersicht}",
          "ack": "true",
          "parse_mode": false
        }
      ]
    },
    "Number1": {
      "switch": [
        {
          "id": "0_userdata.0.number1",
          "value": "6000",
          "toggle": false,
          "confirm": "true",
          "returnText": "Wert wurde auf && gesetzt",
          "ack": "false",
          "parse_mode": false
        }
      ]
    }
  },
  "GetState": {
    "222": {
      "getData": [
        {
          "id": "admin.0.info.updatesJson",
          "text": "Val: ",
          "newline": "true",
          "parse_mode": "false"
        }
      ]
    },
    "-": {
      "nav": [
        [
          ""
        ],
        [
          ""
        ]
      ],
      "text": "Choose an action",
      "parse_mode": false
    },
    "GetState": {
      "nav": [
        [
          "getStateWithMath",
          "Zeitstempel",
          "id Abrufen Und Wert √§ndern",
          "deleteRequests",
          "Zur√ºck",
          "time",
          "change0-100only0and100"
        ],
        [
          "Allgemeines GetState"
        ]
      ],
      "text": "W√§hle eine Aktion",
      "parse_mode": false
    },
    "Allgemeines GetState": {
      "nav": [
        [
          "Boolean abfragen"
        ],
        [
          ""
        ]
      ],
      "text": "Choose an action",
      "parse_mode": false
    },
    "id Abrufen Und Wert √§ndern": {
      "switch": [
        {
          "id": "0_userdata.0.boolean",
          "value": "true",
          "toggle": false,
          "confirm": "true",
          "returnText": " {'id':'0_userdata.0.dynamischer_Wert','text':'Heizung '} change{3000:an,2000:aus}",
          "ack": "true",
          "parse_mode": false
        }
      ]
    },
    "Zeitstempel": {
      "getData": [
        {
          "id": "telegram.0.communicate.botSendMessageId",
          "text": "Bot: &&",
          "newline": "true",
          "parse_mode": "true"
        },
        {
          "id": "telegram.0.communicate.request",
          "text": "<b>req: Zeitstempel:</b> <b>{time.ts,(YYYY DD, MM hh:mm:ss:sss)}</b>",
          "newline": "true",
          "parse_mode": "true"
        },
        {
          "id": "0_userdata.0.latitude",
          "text": "lati: <b>Zeitstempel:</b> {time.ts,(YYYY DD, MM hh:mm:ss:sss)}",
          "newline": "true",
          "parse_mode": "false"
        },
        {
          "id": "admin.0.info.connected",
          "text": "admin: Zeitstempel: {time.lc,(YYYY DD, MM hh:mm:ss:sss)}",
          "newline": "true",
          "parse_mode": "false"
        },
        {
          "id": "0_userdata.0.json",
          "text": "<b>json: Zeitstempel:</b> {time.lc,(YYYY DD, MM hh:mm:ss)}",
          "newline": "true",
          "parse_mode": "false"
        },
        {
          "id": "telegram-menu.0.info.connection",
          "text": "<b>menu: <u>Zeitstempel:</u></b> {time.lc,(YYYY DD, MM hh:mm)}",
          "newline": "true",
          "parse_mode": "false"
        },
        {
          "id": "0_userdata.0.Zahl",
          "text": " {time.ts,(DD MM YYYY hh:mm:ss:sss)}",
          "newline": "true",
          "parse_mode": "false"
        }
      ]
    },
    "Getdecimal": {
      "getData": [
        {
          "id": "0_userdata.0.Value_with_decimal_places",
          "text": "Der aktuelle Wertist <b>&&</b> Grad {round:4}<code>const  a = \"b\" function(){console.log()}</code>",
          "newline": "true",
          "parse_mode": "true"
        }
      ]
    },
    "time": {
      "getData": [
        {
          "id": "0_userdata.0.Time",
          "text": "Die zeit ist {time}",
          "newline": "true",
          "parse_mode": "false"
        }
      ]
    },
    "getStateWithMath": {
      "getData": [
        {
          "id": "0_userdata.0.Temp",
          "text": "Das ist der Wert &&, {math:/10}",
          "newline": "true",
          "parse_mode": "false"
        },
        {
          "id": "0_userdata.0.Test",
          "text": "Und das der zweite",
          "newline": "false",
          "parse_mode": "false"
        }
      ]
    },
    "numberA": {
      "getData": [
        {
          "id": "dfg",
          "text": "dfg",
          "newline": "true",
          "parse_mode": "false"
        }
      ]
    },
    "monitoreSchalten": {
      "getData": [
        {
          "id": "dsfgsd",
          "text": "sdfg",
          "newline": "true",
          "parse_mode": "false"
        }
      ]
    },
    "Light": {
      "getData": [
        {
          "id": "dfg",
          "text": "dfg",
          "newline": "true",
          "parse_mode": "false"
        },
        {
          "id": "f",
          "text": "dfgd",
          "newline": "true",
          "parse_mode": "false"
        },
        {
          "id": "dfg",
          "text": "fgdsfg",
          "newline": "true",
          "parse_mode": "false"
        },
        {
          "id": "dfg",
          "text": "sdfg",
          "newline": "true",
          "parse_mode": "false"
        },
        {
          "id": "f",
          "text": "dfg",
          "newline": "true",
          "parse_mode": "false"
        }
      ]
    },
    "change0-100only0and100": {
      "getData": [
        {
          "id": "0_userdata.0.number1",
          "text": " change{\"0\":\"zero\",\"100\":\"hundred\"}",
          "newline": "true",
          "parse_mode": "false"
        }
      ]
    },
    "Boolean abfragen": {
      "getData": [
        {
          "id": "0_userdata.0.boolean",
          "text": "Der Wert ist &&",
          "newline": "true",
          "parse_mode": "false"
        }
      ]
    }
  },
  "json": {
    "-": {
      "nav": [
        [
          ""
        ],
        [
          ""
        ]
      ],
      "text": "Choose an action",
      "parse_mode": false
    },
    "jsonTable": {
      "nav": [
        [
          "json",
          "json2",
          "addItem"
        ],
        [
          "json3",
          "jsonTextTable",
          "√úbersicht"
        ]
      ],
      "text": "Choose an action",
      "parse_mode": false
    },
    "addItem": {
      "switch": [
        {
          "id": "alexa2.0.Lists.SHOPPING_LIST.#New",
          "value": "-",
          "toggle": false,
          "confirm": "true",
          "returnText": " {setDynamicValue:Neuer Eintrag:string:&& wurde eingetragen!:}",
          "ack": "false",
          "parse_mode": false
        }
      ]
    },
    "json": {
      "getData": [
        {
          "id": "0_userdata.0.json",
          "text": " {json;[time:Zeit,name:Name];<b>Einkaufsliste</b>;}",
          "newline": "true",
          "parse_mode": "true"
        }
      ]
    },
    "json2": {
      "getData": [
        {
          "id": "alexa-shoppinglist.0.list_activ",
          "text": " {json;[name:];<b>Einkaufsliste</b>;shoppinglist;}",
          "newline": "true",
          "parse_mode": "true"
        }
      ]
    },
    "jsonTextTable": {
      "getData": [
        {
          "id": "0_userdata.0.json",
          "text": " {json;[time:,name:];** Einkaufsliste **;TextTable;LineWidth}",
          "newline": "true",
          "parse_mode": "false"
        }
      ]
    },
    "jsonTextTable2": {
      "getData": [
        {
          "id": "0_userdata.0.json2",
          "text": "{json;[Datum:Datum,VerbrauchMonat:VerbrauchMonat];Monatlich;TextTable;}",
          "newline": "true",
          "parse_mode": "false"
        }
      ]
    },
    "json3": {
      "getData": [
        {
          "id": "0_userdata.0.json3",
          "text": " {json;[name:Name];** Einkaufsliste **;TextTable;LineWidth}",
          "newline": "true",
          "parse_mode": "false"
        }
      ]
    }
  },
  "TimeStamp": {
    "-": {
      "nav": [
        [
          ""
        ],
        [
          ""
        ]
      ],
      "text": "Choose an action",
      "parse_mode": false
    },
    "Timestamp": {
      "nav": [
        [
          "√úbersicht",
          "deleteRequests"
        ],
        [
          ""
        ]
      ],
      "text": "Garage ist <b> {status:'id':'0_userdata.0.boolean'}</b>  change{\"true\":\"geschlossen\",\"false\":\"ge√∂ffnet\"} \\n {time.ts,(DD.MM.YYYY hh:mm:ss:sss),id:'0_userdata.0.boolean'}",
      "parse_mode": true
    }
  },
  "Melanie": {
    "-": {
      "nav": [
        [
          ""
        ],
        [
          ""
        ]
      ],
      "text": "Choosean action",
      "parse_mode": false
    },
    "Melanie": {
      "nav": [
        [
          "Test",
          "√úbersicht",
          "Rolladen"
        ],
        [
          ""
        ]
      ],
      "text": "Choose an action",
      "parse_mode": false
    }
  },
  "httpRequest": {
    "-": {
      "nav": [
        [
          ""
        ],
        [
          ""
        ]
      ],
      "text": "Choose an action",
      "parse_mode": false
    },
    "httpRequest": {
      "httpRequest": [
        {
          "url": "https://www.google.de/images/branding/googlelogo/1x/googlelogo_color_272x92dp.png",
          "user": "false",
          "password": "false",
          "filename": "http-request-photo.jpg"
        }
      ]
    },
    "das": {
      "httpRequest": [
        {
          "url": "ffd",
          "user": "false",
          "password": "false",
          "filename": "http-request-photo.jpg"
        }
      ]
    }
  },
  "Allgemeine_Tests": {
    "-": {
      "nav": [
        [
          ""
        ],
        [
          ""
        ]
      ],
      "text": "Choose an action",
      "parse_mode": false
    },
    "Allgemeine_Tests": {
      "nav": [
        [
          "√úbersicht"
        ],
        [
          "SetStates",
          "GetStates",
          "ButtonInOneLine",
          "Menu"
        ],
        [
          "Delete",
          "Funktionen"
        ],
        [
          "Melanie"
        ]
      ],
      "text": "Choose an action {status:'0_userdata.0.number1':true}",
      "parse_mode": false
    },
    "Menu": {
      "nav": [
        [
          "MenuBoolean",
          "MenuNumber",
          "MenuDynSwitch"
        ],
        [
          "√úbersicht"
        ]
      ],
      "text": "Choose an action",
      "parse_mode": false
    },
    "SetStates": {
      "nav": [
        [
          "√úbersicht"
        ],
        [
          "Boolean1",
          "BooleanToggle",
          "Set dynamic value",
          "Lang",
          "Nummer setzen"
        ],
        [
          "√úbersicht"
        ],
        [
          "SetDynamicValueWithOtherIdResponse"
        ]
      ],
      "text": "Choose an action {time.ts,(DD MM YYYY hh:mm:ss:sss),id:'0_userdata.0.Zahl'}",
      "parse_mode": false
    },
    "ButtonInOneLine": {
      "nav": [
        [
          "a",
          "b",
          "c"
        ],
        [
          ""
        ]
      ],
      "text": "Choose an action",
      "parse_mode": false
    },
    "MenuBoolean": {
      "nav": [
        [
          "menu:switch-ein.true-aus.false:MenuBooleanTrigger:"
        ],
        [
          ""
        ]
      ],
      "text": "Choose an action",
      "parse_mode": false
    },
    "MenuNumber": {
      "nav": [
        [
          "menu:number2-8-1-¬∞C:SetMenuNumber:"
        ],
        [
          ""
        ]
      ],
      "text": "Position w√§hlen ",
      "parse_mode": false
    },
    "MenuDynSwitch": {
      "nav": [
        [
          "menu:dynSwitch[Ein|0",
          "Aus|4",
          "Party|3]:Warmwassser_an_aus:LengthOfRow:"
        ],
        [
          ""
        ]
      ],
      "text": "Choose an action",
      "parse_mode": false
    },
    "Lang": {
      "nav": [
        [
          "menu:number2-8-1-¬∞C:DasIstEinTestMitEinemGanzLangenNamenUmEinenWertInEinenStateZuSchreiben:"
        ],
        [
          ""
        ]
      ],
      "text": "Position w√§hlen ",
      "parse_mode": false
    },
    "Test Menu": {
      "nav": [
        [
          "sdasdf"
        ],
        [
          ""
        ]
      ],
      "text": "chooseAction",
      "parse_mode": false
    },
    "Set dynamic value": {
      "switch": [
        {
          "id": "0_userdata.0.number1"
        },
        {
          "value": "-",
          "toggle": false,
          "confirm": "true",
          "returnText": "{setDynamicValue:Bitte Wert eingeben:number:Wert wurde auf && gesetzt:}",
          "ack": "true",
          "parse_mode": false
        }
      ]
    },
    "Boolean1": {
      "switch": [
        {
          "id": "0_userdata.0.boolean",
          "value": "false",
          "toggle": false,
          "confirm": "true",
          "returnText": "Wert wurde auf && gesetzt",
          "ack": "false",
          "parse_mode": false
        }
      ]
    },
    "BooleanToggle": {
      "switch": [
        {
          "id": "0_userdata.0.boolean",
          "value": "-",
          "toggle": true,
          "confirm": "true",
          "returnText": "Wert wurde auf && gesetzt",
          "ack": "false",
          "parse_mode": false
        }
      ]
    },
    "SetMenuNumber": {
      "switch": [
        {
          "id": "0_userdata.0.Neuer_Zustand",
          "value": "0",
          "toggle": false,
          "confirm": "false",
          "returnText": " {'id':'0_userdata.0.Neuer_Zustand','text':'Der Wert wurde auf && gesetzt'}",
          "ack": "true",
          "parse_mode": false
        }
      ]
    },
    "Nummer setzen": {
      "switch": [
        {
          "id": "0_userdata.0.number1",
          "value": "4500",
          "toggle": false,
          "confirm": "true",
          "returnText": "Wert wurde gesetzt",
          "ack": "true",
          "parse_mode": false
        }
      ]
    },
    "Warmwassser_an_aus": {
      "switch": [
        {
          "id": "0_userdata.0.zahl",
          "value": "-",
          "toggle": false,
          "confirm": "true",
          "returnText": " {'id':'0_userdata.0.zahl','text':'Wurde gesetzt'}",
          "ack": "false",
          "parse_mode": false
        }
      ]
    },
    "SetDynamicValueWithOtherId Response": {
      "switch": [
        {
          "id": "0_userdata.0.zahl",
          "value": "-",
          "toggle": false,
          "confirm": "true",
          "returnText": " {setDynamicValue:Bitte Wert eingeben:number:Wert wurde auf && gesetzt:0_userdata.0.number1:}",
          "ack": "false",
          "parse_mode": false
        }
      ]
    },
    "DasIstEinTestMitEinemGanzLangenNamenUmEinenWertInEinenStateZuSchreiben": {
      "switch": [
        {
          "id": "0_userdata.0.Zahl",
          "value": "",
          "toggle": false,
          "confirm": "true",
          "returnText": "Das ist der neue Wert:",
          "ack": "false",
          "parse_mode": false
        }
      ]
    },
    "Funktionen": {
      "getData": [
        {
          "id": "functions=test",
          "text": "Der Wert {common.name} ist && !!!",
          "newline": "true",
          "parse_mode": "false"
        }
      ]
    }
  }
}

