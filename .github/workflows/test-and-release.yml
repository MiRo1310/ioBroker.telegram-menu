name: Test and Release

# Run this job on all pushes and pull requests
# as well as tags with a semantic version
on:
    push:
        paths-ignore:
            - "docs/**"
        branches:
            - "main"
        tags:
            # normal versions
            - "v[0-9]+.[0-9]+.[0-9]+"
            # pre-releases
            - "v[0-9]+.[0-9]+.[0-9]+-**"
    pull_request:
        paths-ignore:
            - "docs/**"

# Cancel previous PR/branch runs when a new commit is pushed
concurrency:
    group: ${{ github.ref }}
    cancel-in-progress: true

jobs:
    # Performs quick checks before the expensive test runs
    check-and-lint:
        if: contains(github.event.head_commit.message, '[skip ci]') == false

        runs-on: ubuntu-latest

        steps:
            - uses: ioBroker/testing-action-check@v1
              with:
                  node-version: "20.x"
                  lint: true
                  lint-command: "npm run lint"

    adapter-tests:
        if: contains(github.event.head_commit.message, '[skip ci]') == false

        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                node-version: [20.x, 22.x, 24.x]
                os: [ubuntu-latest, windows-latest, macos-latest]

        steps:
            - name: Set timezone (Windows only)
              if: runner.os == 'Windows'
              run: tzutil /s "W. Europe Standard Time"

            - uses: ioBroker/testing-action-adapter@v1
              with:
                  node-version: ${{ matrix.node-version }}
                  os: ${{ matrix.os }}                 
                  
    unit-tests:
      needs: [ check-and-lint, adapter-tests ]
      if: contains(github.event.head_commit.message, '[skip ci]') == false
      
      runs-on: ubuntu-latest
      
      steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - name: Setup Node.js
          uses: actions/setup-node@v4
          with:
            node-version: '22.x'
            cache: 'npm'

        - name: Install dependencies
          run: npm ci

        - name: Run Unit tests
          run: npm run test:js
          timeout-minutes: 5
    
    integration-tests:
      needs: [ check-and-lint, adapter-tests ]
      if: contains(github.event.head_commit.message, '[skip ci]') == false

      runs-on: ubuntu-latest

      steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - name: Setup Node.js
          uses: actions/setup-node@v4
          with:
            node-version: '22.x'
            cache: 'npm'

        - name: Install dependencies
          run: npm ci

        - name: Run integration tests
          run: npm run test:integration
          timeout-minutes: 5
          
    deploy:
        needs: [unit-tests, integration-tests]

        if: |
            contains(github.event.head_commit.message, '[skip ci]') == false &&
            github.event_name == 'push' &&
            startsWith(github.ref, 'refs/tags/v')
        runs-on: ubuntu-latest
        steps:
            - uses: ioBroker/testing-action-deploy@v1
              with:
                  node-version: "20.x"
                  npm-token: ${{ secrets.NPM_TOKEN }}
                  github-token: ${{ secrets.GITHUB_TOKEN }}
