{
  "version": 3,
  "sources": ["../../src/lib/sendNav.ts"],
  "sourcesContent": ["import { error } from \"console\";\r\nimport { debug } from \"./logging\";\r\nimport { sendToTelegram } from \"./telegram\";\r\nimport { checkStatusInfo } from \"./utilities\";\r\nimport { Part, UserListWithChatId } from \"./telegram-menu\";\r\n\r\nasync function sendNav(\r\n\tpart: Part,\r\n\tuserToSend: string,\r\n\tinstanceTelegram: string,\r\n\tuserListWithChatID: UserListWithChatId[],\r\n\tresize_keyboard: boolean,\r\n\tone_time_keyboard: boolean,\r\n): Promise<void> {\r\n\ttry {\r\n\t\tif (userToSend) {\r\n\t\t\tdebug([{ text: \"Send Nav to Telegram\" }]);\r\n\t\t\tconst nav = part.nav;\r\n\t\t\tconst text = await checkStatusInfo(part.text as string);\r\n\r\n\t\t\tsendToTelegram(\r\n\t\t\t\tuserToSend,\r\n\t\t\t\ttext as string,\r\n\t\t\t\tnav,\r\n\t\t\t\tinstanceTelegram,\r\n\t\t\t\tresize_keyboard,\r\n\t\t\t\tone_time_keyboard,\r\n\t\t\t\tuserListWithChatID,\r\n\t\t\t\tpart.parseMode || \"\",\r\n\t\t\t);\r\n\t\t}\r\n\t} catch (e: any) {\r\n\t\terror([\r\n\t\t\t{ text: \"Error sendNav:\", val: e.message },\r\n\t\t\t{ text: \"Stack:\", val: e.stack },\r\n\t\t]);\r\n\t}\r\n}\r\nexport { sendNav };\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAsB;AACtB,qBAAsB;AACtB,sBAA+B;AAC/B,uBAAgC;AAGhC,eAAe,QACd,MACA,YACA,kBACA,oBACA,iBACA,mBACgB;AAChB,MAAI;AACH,QAAI,YAAY;AACf,gCAAM,CAAC,EAAE,MAAM,uBAAuB,CAAC,CAAC;AACxC,YAAM,MAAM,KAAK;AACjB,YAAM,OAAO,UAAM,kCAAgB,KAAK,IAAc;AAEtD;AAAA,QACC;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA,KAAK,aAAa;AAAA,MACnB;AAAA,IACD;AAAA,EACD,SAAS,GAAP;AACD,8BAAM;AAAA,MACL,EAAE,MAAM,kBAAkB,KAAK,EAAE,QAAQ;AAAA,MACzC,EAAE,MAAM,UAAU,KAAK,EAAE,MAAM;AAAA,IAChC,CAAC;AAAA,EACF;AACD;",
  "names": []
}
