{
  "version": 3,
  "sources": ["../../src/lib/dynamicSwitch.ts"],
  "sourcesContent": ["import { error } from \"./logging\";\r\nimport { checkStatusInfo } from \"./utilities\";\r\nasync function dynamicSwitch(\r\n\tcalledValue: string,\r\n\tdevice2Switch: string,\r\n\ttext: string,\r\n): Promise<{ text?: string; keyboard: string; device: string } | undefined> {\r\n\ttry {\r\n\t\tconst changedCalledValue = await checkStatusInfo(calledValue);\r\n\t\tconst splittedArray: string[] | undefined = changedCalledValue?.replace(/\"/g, \"\").split(\":\");\r\n\t\tif (!splittedArray) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tdevice2Switch = splittedArray[2];\r\n\t\tconst arrayOfValues = splittedArray[1].replace(\"dynSwitch\", \"\").replace(/\\]/g, \"\").replace(/\\[/g, \"\").split(\",\");\r\n\r\n\t\tconst lengthOfRow = parseInt(splittedArray[3]) || 6;\r\n\r\n\t\tconst array: ArrayOfEntriesDynamicSwitch[][] = [];\r\n\t\tconst keyboard: Keyboard = { inline_keyboard: array };\r\n\t\tif (arrayOfValues) {\r\n\t\t\tlet arrayOfEntriesDynamicSwitch: ArrayOfEntriesDynamicSwitch[] = [];\r\n\t\t\tarrayOfValues.forEach((value, index: number) => {\r\n\t\t\t\tif (value.includes(\"|\")) {\r\n\t\t\t\t\tconst splittedValue = value.split(\"|\");\r\n\t\t\t\t\tarrayOfEntriesDynamicSwitch.push({ text: splittedValue[0], callback_data: `menu:dynS:${device2Switch}:${splittedValue[1]}` });\r\n\t\t\t\t} else {\r\n\t\t\t\t\tarrayOfEntriesDynamicSwitch.push({ text: value, callback_data: `menu:dynS:${device2Switch}:${value}` });\r\n\t\t\t\t}\r\n\t\t\t\tif (((index + 1) % lengthOfRow == 0 && index != 0 && arrayOfValues.length > 0) || index + 1 == arrayOfValues.length) {\r\n\t\t\t\t\tkeyboard.inline_keyboard.push(arrayOfEntriesDynamicSwitch);\r\n\t\t\t\t\tarrayOfEntriesDynamicSwitch = [];\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn { text, keyboard: JSON.stringify(keyboard), device: device2Switch };\r\n\t\t}\r\n\t} catch (e: any) {\r\n\t\terror([\r\n\t\t\t{ text: \"Error parsing dynSwitch:\", val: e.message },\r\n\t\t\t{ text: \"Stack:\", val: e.stack },\r\n\t\t]);\r\n\t}\r\n}\r\nexport { dynamicSwitch };\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAsB;AACtB,uBAAgC;AAChC,eAAe,cACd,aACA,eACA,MAC2E;AAC3E,MAAI;AACH,UAAM,qBAAqB,UAAM,kCAAgB,WAAW;AAC5D,UAAM,gBAAsC,yDAAoB,QAAQ,MAAM,IAAI,MAAM;AACxF,QAAI,CAAC,eAAe;AACnB;AAAA,IACD;AACA,oBAAgB,cAAc;AAC9B,UAAM,gBAAgB,cAAc,GAAG,QAAQ,aAAa,EAAE,EAAE,QAAQ,OAAO,EAAE,EAAE,QAAQ,OAAO,EAAE,EAAE,MAAM,GAAG;AAE/G,UAAM,cAAc,SAAS,cAAc,EAAE,KAAK;AAElD,UAAM,QAAyC,CAAC;AAChD,UAAM,WAAqB,EAAE,iBAAiB,MAAM;AACpD,QAAI,eAAe;AAClB,UAAI,8BAA6D,CAAC;AAClE,oBAAc,QAAQ,CAAC,OAAO,UAAkB;AAC/C,YAAI,MAAM,SAAS,GAAG,GAAG;AACxB,gBAAM,gBAAgB,MAAM,MAAM,GAAG;AACrC,sCAA4B,KAAK,EAAE,MAAM,cAAc,IAAI,eAAe,aAAa,iBAAiB,cAAc,KAAK,CAAC;AAAA,QAC7H,OAAO;AACN,sCAA4B,KAAK,EAAE,MAAM,OAAO,eAAe,aAAa,iBAAiB,QAAQ,CAAC;AAAA,QACvG;AACA,aAAM,QAAQ,KAAK,eAAe,KAAK,SAAS,KAAK,cAAc,SAAS,KAAM,QAAQ,KAAK,cAAc,QAAQ;AACpH,mBAAS,gBAAgB,KAAK,2BAA2B;AACzD,wCAA8B,CAAC;AAAA,QAChC;AAAA,MACD,CAAC;AACD,aAAO,EAAE,MAAM,UAAU,KAAK,UAAU,QAAQ,GAAG,QAAQ,cAAc;AAAA,IAC1E;AAAA,EACD,SAAS,GAAP;AACD,8BAAM;AAAA,MACL,EAAE,MAAM,4BAA4B,KAAK,EAAE,QAAQ;AAAA,MACnD,EAAE,MAAM,UAAU,KAAK,EAAE,MAAM;AAAA,IAChC,CAAC;AAAA,EACF;AACD;",
  "names": []
}
