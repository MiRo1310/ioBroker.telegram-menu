{
  "version": 3,
  "sources": ["../../src/lib/subscribeStates.ts"],
  "sourcesContent": ["import TelegramMenu from \"../main\";\r\nimport { deleteDoubleEntriesInArray } from \"./global\";\r\nimport { debug } from \"./logging\";\r\nimport { SetStateIds } from \"./telegram-menu\";\r\n\r\nasync function _subscribeAndUnSubscribeForeignStatesAsync(obj: { array?: SetStateIds[]; id?: string }): Promise<void> {\r\n\tconst _this = TelegramMenu.getInstance();\r\n\tif (obj.id) {\r\n\t\tdebug([\r\n\t\t\t{ text: \"ID to subscribe:\", val: obj.id },\r\n\t\t\t{ text: \"Subscribe:\", val: await _this.subscribeForeignStatesAsync(obj.id) },\r\n\t\t]);\r\n\t} else if (obj.array) {\r\n\t\tobj.array.forEach((element) => {\r\n\t\t\t_this.subscribeForeignStatesAsync(element[\"id\"]);\r\n\t\t});\r\n\t}\r\n}\r\n\r\nasync function _subscribeForeignStatesAsync(array: string[]): Promise<void> {\r\n\tconst _this = TelegramMenu.getInstance();\r\n\tarray = deleteDoubleEntriesInArray(array);\r\n\tarray.forEach(async (element) => {\r\n\t\tawait _this.subscribeForeignStatesAsync(element);\r\n\t});\r\n\tdebug([{ text: \"Subscribe all States of:\", val: array }]);\r\n}\r\n\r\nexport { _subscribeAndUnSubscribeForeignStatesAsync, _subscribeForeignStatesAsync };\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAyB;AACzB,oBAA2C;AAC3C,qBAAsB;AAGtB,eAAe,2CAA2C,KAA4D;AACrH,QAAM,QAAQ,YAAAA,QAAa,YAAY;AACvC,MAAI,IAAI,IAAI;AACX,8BAAM;AAAA,MACL,EAAE,MAAM,oBAAoB,KAAK,IAAI,GAAG;AAAA,MACxC,EAAE,MAAM,cAAc,KAAK,MAAM,MAAM,4BAA4B,IAAI,EAAE,EAAE;AAAA,IAC5E,CAAC;AAAA,EACF,WAAW,IAAI,OAAO;AACrB,QAAI,MAAM,QAAQ,CAAC,YAAY;AAC9B,YAAM,4BAA4B,QAAQ,KAAK;AAAA,IAChD,CAAC;AAAA,EACF;AACD;AAEA,eAAe,6BAA6B,OAAgC;AAC3E,QAAM,QAAQ,YAAAA,QAAa,YAAY;AACvC,cAAQ,0CAA2B,KAAK;AACxC,QAAM,QAAQ,OAAO,YAAY;AAChC,UAAM,MAAM,4BAA4B,OAAO;AAAA,EAChD,CAAC;AACD,4BAAM,CAAC,EAAE,MAAM,4BAA4B,KAAK,MAAM,CAAC,CAAC;AACzD;",
  "names": ["TelegramMenu"]
}
