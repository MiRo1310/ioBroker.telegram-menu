{
  "version": 3,
  "sources": ["../../src/lib/subscribeStates.ts"],
  "sourcesContent": ["import TelegramMenu from '../main';\nimport { deleteDoubleEntriesInArray } from './global';\nimport { debug } from './logging';\nimport type { SetStateIds } from '../types/types';\n\nasync function _subscribeAndUnSubscribeForeignStatesAsync(obj: { array?: SetStateIds[]; id?: string }): Promise<void> {\n    const _this = TelegramMenu.getInstance();\n    if (obj.id) {\n        debug([\n            { text: 'ID to subscribe:', val: obj.id },\n            { text: 'Subscribe:', val: await _this.subscribeForeignStatesAsync(obj.id) },\n        ]);\n    } else if (obj.array) {\n        for (const element of obj.array) {\n            await _this.subscribeForeignStatesAsync(element.id);\n        }\n    }\n}\n\nasync function _subscribeForeignStatesAsync(array: string[]): Promise<void> {\n    const _this = TelegramMenu.getInstance();\n    array = deleteDoubleEntriesInArray(array);\n    for (const element of array) {\n        await _this.subscribeForeignStatesAsync(element);\n    }\n    debug([{ text: 'Subscribe all States of:', val: array }]);\n}\n\nexport { _subscribeAndUnSubscribeForeignStatesAsync, _subscribeForeignStatesAsync };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAyB;AACzB,oBAA2C;AAC3C,qBAAsB;AAGtB,eAAe,2CAA2C,KAA4D;AAClH,QAAM,QAAQ,YAAAA,QAAa,YAAY;AACvC,MAAI,IAAI,IAAI;AACR,8BAAM;AAAA,MACF,EAAE,MAAM,oBAAoB,KAAK,IAAI,GAAG;AAAA,MACxC,EAAE,MAAM,cAAc,KAAK,MAAM,MAAM,4BAA4B,IAAI,EAAE,EAAE;AAAA,IAC/E,CAAC;AAAA,EACL,WAAW,IAAI,OAAO;AAClB,eAAW,WAAW,IAAI,OAAO;AAC7B,YAAM,MAAM,4BAA4B,QAAQ,EAAE;AAAA,IACtD;AAAA,EACJ;AACJ;AAEA,eAAe,6BAA6B,OAAgC;AACxE,QAAM,QAAQ,YAAAA,QAAa,YAAY;AACvC,cAAQ,0CAA2B,KAAK;AACxC,aAAW,WAAW,OAAO;AACzB,UAAM,MAAM,4BAA4B,OAAO;AAAA,EACnD;AACA,4BAAM,CAAC,EAAE,MAAM,4BAA4B,KAAK,MAAM,CAAC,CAAC;AAC5D;",
  "names": ["TelegramMenu"]
}
