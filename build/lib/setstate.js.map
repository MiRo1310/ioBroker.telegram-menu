{
  "version": 3,
  "sources": ["../../src/lib/setstate.ts"],
  "sourcesContent": ["import { sendToTelegram } from \"./telegram\";\r\nimport { checkTypeOfId } from \"./utilities\";\r\nimport { setDynamicValue } from \"./dynamicValue\";\r\nimport { decomposeText } from \"./global\";\r\nimport TelegramMenu from \"../main\";\r\nimport { debug, error } from \"./logging\";\r\nimport { Part, UserListWithChatId, SetStateIds } from \"./telegram-menu\";\r\n\r\nconst modifiedValue = (valueFromSubmenu: string, value: string): string => {\r\n\tif (value && typeof value === \"string\" && value.includes(\"{value}\")) {\r\n\t\treturn value.replace(\"{value}\", valueFromSubmenu);\r\n\t}\r\n\treturn valueFromSubmenu;\r\n};\r\nconst isDynamicValueToSet = async (value: string | number | boolean): Promise<string | number | boolean> => {\r\n\tconst _this = TelegramMenu.getInstance();\r\n\tif (typeof value === \"string\" && value.includes(\"{id:\")) {\r\n\t\tconst result = decomposeText(value, \"{id:\", \"}\");\r\n\t\tconst id = result.substring.replace(\"{id:\", \"\").replace(\"}\", \"\");\r\n\t\tconst newValue = await _this.getForeignStateAsync(id);\r\n\t\tif (newValue && newValue.val && typeof newValue.val === \"string\") {\r\n\t\t\treturn value.replace(result.substring, newValue.val);\r\n\t\t}\r\n\t}\r\n\treturn value;\r\n};\r\nconst setValue = async (id: string, value: string, SubmenuValuePriority: boolean, valueFromSubmenu: string | number, ack: boolean): Promise<void> => {\r\n\ttry {\r\n\t\tconst _this = TelegramMenu.getInstance();\r\n\t\tlet valueToSet;\r\n\t\tSubmenuValuePriority ? (valueToSet = modifiedValue(valueFromSubmenu as string, value)) : (valueToSet = await isDynamicValueToSet(value));\r\n\t\tawait checkTypeOfId(id, valueToSet).then((val: ioBroker.StateValue | ioBroker.SettableState | undefined) => {\r\n\t\t\tvalueToSet = val;\r\n\t\t\tdebug([{ text: \"Value to Set:\", val: valueToSet }]);\r\n\t\t\tif (valueToSet !== undefined && valueToSet !== null) {\r\n\t\t\t\t_this.setForeignState(id, valueToSet, ack);\r\n\t\t\t}\r\n\t\t});\r\n\t} catch (error: any) {\r\n\t\terror([\r\n\t\t\t{ text: \"Error setValue\", val: error.message },\r\n\t\t\t{ text: \"Stack\", val: error.stack },\r\n\t\t]);\r\n\t}\r\n};\r\n\r\nexport const setState = async (\r\n\tpart: Part,\r\n\tuserToSend: string,\r\n\tvalueFromSubmenu: string | number,\r\n\tSubmenuValuePriority: boolean,\r\n\ttelegramInstance: string,\r\n\tresize_keyboard: boolean,\r\n\tone_time_keyboard: boolean,\r\n\tuserListWithChatID: UserListWithChatId[],\r\n): Promise<SetStateIds[] | undefined> => {\r\n\tconst _this = TelegramMenu.getInstance();\r\n\ttry {\r\n\t\tconst setStateIds: SetStateIds[] = [];\r\n\t\tpart.switch?.forEach((element) => {\r\n\t\t\tlet ack = false;\r\n\t\t\tlet returnText = element.returnText;\r\n\r\n\t\t\tack = element?.ack ? element.ack === \"true\" : false;\r\n\r\n\t\t\tif (returnText.includes(\"{setDynamicValue\")) {\r\n\t\t\t\tconst { confirmText, id } = setDynamicValue(\r\n\t\t\t\t\treturnText,\r\n\t\t\t\t\tack,\r\n\t\t\t\t\telement.id,\r\n\t\t\t\t\tuserToSend,\r\n\t\t\t\t\ttelegramInstance,\r\n\t\t\t\t\tone_time_keyboard,\r\n\t\t\t\t\tresize_keyboard,\r\n\t\t\t\t\tuserListWithChatID,\r\n\t\t\t\t\telement.parseMode,\r\n\t\t\t\t\telement.confirm,\r\n\t\t\t\t);\r\n\r\n\t\t\t\tif (element.confirm) {\r\n\t\t\t\t\treturn setStateIds.push({\r\n\t\t\t\t\t\tid: id || element.id,\r\n\t\t\t\t\t\tconfirm: element.confirm,\r\n\t\t\t\t\t\treturnText: confirmText as string,\r\n\t\t\t\t\t\tuserToSend: userToSend,\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!returnText.includes(\"{'id':'\")) {\r\n\t\t\t\tsetStateIds.push({\r\n\t\t\t\t\tid: element.id,\r\n\t\t\t\t\tconfirm: element.confirm,\r\n\t\t\t\t\treturnText: returnText,\r\n\t\t\t\t\tuserToSend: userToSend,\r\n\t\t\t\t\tparseMode: element.parseMode,\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\treturnText = returnText.replace(/'/g, '\"');\r\n\t\t\t\tconst textToSend = returnText.slice(0, returnText.indexOf(\"{\")).trim();\r\n\t\t\t\tconst returnObj = JSON.parse(returnText.slice(returnText.indexOf(\"{\"), returnText.indexOf(\"}\") + 1));\r\n\r\n\t\t\t\treturnObj.text = returnObj.text + returnText.slice(returnText.indexOf(\"}\") + 1);\r\n\t\t\t\tif (textToSend && textToSend !== \"\") {\r\n\t\t\t\t\tsendToTelegram(\r\n\t\t\t\t\t\tuserToSend,\r\n\t\t\t\t\t\ttextToSend,\r\n\t\t\t\t\t\tundefined,\r\n\t\t\t\t\t\ttelegramInstance,\r\n\t\t\t\t\t\tone_time_keyboard,\r\n\t\t\t\t\t\tresize_keyboard,\r\n\t\t\t\t\t\tuserListWithChatID,\r\n\t\t\t\t\t\telement.parseMode,\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetStateIds.push({\r\n\t\t\t\t\tid: returnObj.id,\r\n\t\t\t\t\tconfirm: true,\r\n\t\t\t\t\treturnText: returnObj.text,\r\n\t\t\t\t\tuserToSend: userToSend,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif (element.toggle) {\r\n\t\t\t\t_this\r\n\t\t\t\t\t.getForeignStateAsync(element.id)\r\n\t\t\t\t\t.then((val) => {\r\n\t\t\t\t\t\tif (val) {\r\n\t\t\t\t\t\t\t_this.setForeignStateAsync(element.id, !val.val, ack);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch((e: any) => {\r\n\t\t\t\t\t\terror([\r\n\t\t\t\t\t\t\t{ text: \"Error\", val: e.message },\r\n\t\t\t\t\t\t\t{ text: \"Stack\", val: e.stack },\r\n\t\t\t\t\t\t]);\r\n\t\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tsetValue(element.id, element.value, SubmenuValuePriority, valueFromSubmenu, ack);\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn setStateIds;\r\n\t} catch (error: any) {\r\n\t\terror([\r\n\t\t\t{ text: \"Error Switch\", val: error.message },\r\n\t\t\t{ text: \"Stack\", val: error.stack },\r\n\t\t]);\r\n\t}\r\n};\r\n"],
  "mappings": "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",
  "names": ["TelegramMenu", "error"]
}
