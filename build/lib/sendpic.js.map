{
  "version": 3,
  "sources": ["../../src/lib/sendpic.ts"],
  "sourcesContent": ["import { sendToTelegram } from './telegram';\nimport { replaceAll } from './utilities';\nimport { exec } from 'child_process';\nimport { debug, error } from './logging';\nimport TelegramMenu from '../main';\nimport type { Part, UserListWithChatId, Timeouts } from './telegram-menu';\nimport { checkDirectoryIsOk } from './global';\n\nfunction sendPic(\n    part: Part,\n    userToSend: string,\n    instanceTelegram: string,\n    resize_keyboard: boolean,\n    one_time_keyboard: boolean,\n    userListWithChatID: UserListWithChatId[],\n    token: string,\n    directoryPicture: string,\n    timeouts: Timeouts[],\n    timeoutKey: string,\n): Timeouts[] {\n    try {\n        part.sendPic?.forEach(element => {\n            const _this = TelegramMenu.getInstance();\n            let path = '';\n            if (element.id != '-') {\n                const url = element.id;\n                const newUrl = replaceAll(url, '&amp;', '&');\n\n                exec(\n                    `curl -H \"Autorisation: Bearer ${token.trim()}\" \"${newUrl}\" > ${directoryPicture}${element.fileName}`,\n                    (error: any, stdout: any, stderr: any) => {\n                        if (stdout) {\n                            debug([{ text: 'Stdout:', val: stdout }]);\n                        }\n                        if (stderr) {\n                            debug([{ text: 'Stderr:', val: stderr }]);\n                        }\n                        if (error) {\n                            error([{ text: 'Error:', val: error }]);\n                            return;\n                        }\n                    },\n                );\n\n                debug([{ text: 'Delay Time:', val: element.delay }]);\n                timeoutKey += 1;\n\n                if (!checkDirectoryIsOk(directoryPicture)) {\n                    return;\n                }\n\n                path = `${directoryPicture}${element.fileName}`;\n                debug([{ text: 'Path : ', val: path }]);\n            } else {\n                return;\n            }\n\n            const timeout = _this.setTimeout(async () => {\n                await sendToTelegram({\n                    user: userToSend,\n                    textToSend: path,\n                    keyboard: undefined,\n                    instance: instanceTelegram,\n                    resize_keyboard: resize_keyboard,\n                    one_time_keyboard: one_time_keyboard,\n                    userListWithChatID: userListWithChatID,\n                    parse_mode: 'false',\n                });\n                let timeoutToClear: Timeouts[] = [];\n                timeoutToClear = timeouts.filter(item => item.key == timeoutKey);\n                timeoutToClear.forEach(item => {\n                    clearTimeout(item.timeout);\n                });\n\n                timeouts = timeouts.filter(item => item.key !== timeoutKey);\n                debug([{ text: 'Picture sent' }]);\n            }, parseInt(element.delay));\n\n            if (timeout) {\n                timeouts.push({ key: timeoutKey, timeout: timeout });\n            }\n        });\n        return timeouts;\n    } catch (e: any) {\n        error([\n            { text: 'Error:', val: e.message },\n            { text: 'Stack:', val: e.stack },\n        ]);\n    }\n    return timeouts;\n}\n\nexport { sendPic };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA+B;AAC/B,uBAA2B;AAC3B,2BAAqB;AACrB,qBAA6B;AAC7B,kBAAyB;AAEzB,oBAAmC;AAEnC,SAAS,QACL,MACA,YACA,kBACA,iBACA,mBACA,oBACA,OACA,kBACA,UACA,YACU;AAnBd;AAoBI,MAAI;AACA,eAAK,YAAL,mBAAc,QAAQ,aAAW;AAC7B,YAAM,QAAQ,YAAAA,QAAa,YAAY;AACvC,UAAI,OAAO;AACX,UAAI,QAAQ,MAAM,KAAK;AACnB,cAAM,MAAM,QAAQ;AACpB,cAAM,aAAS,6BAAW,KAAK,SAAS,GAAG;AAE3C;AAAA,UACI,iCAAiC,MAAM,KAAK,CAAC,MAAM,MAAM,OAAO,gBAAgB,GAAG,QAAQ,QAAQ;AAAA,UACnG,CAACC,QAAY,QAAa,WAAgB;AACtC,gBAAI,QAAQ;AACR,wCAAM,CAAC,EAAE,MAAM,WAAW,KAAK,OAAO,CAAC,CAAC;AAAA,YAC5C;AACA,gBAAI,QAAQ;AACR,wCAAM,CAAC,EAAE,MAAM,WAAW,KAAK,OAAO,CAAC,CAAC;AAAA,YAC5C;AACA,gBAAIA,QAAO;AACP,cAAAA,OAAM,CAAC,EAAE,MAAM,UAAU,KAAKA,OAAM,CAAC,CAAC;AACtC;AAAA,YACJ;AAAA,UACJ;AAAA,QACJ;AAEA,kCAAM,CAAC,EAAE,MAAM,eAAe,KAAK,QAAQ,MAAM,CAAC,CAAC;AACnD,sBAAc;AAEd,YAAI,KAAC,kCAAmB,gBAAgB,GAAG;AACvC;AAAA,QACJ;AAEA,eAAO,GAAG,gBAAgB,GAAG,QAAQ,QAAQ;AAC7C,kCAAM,CAAC,EAAE,MAAM,WAAW,KAAK,KAAK,CAAC,CAAC;AAAA,MAC1C,OAAO;AACH;AAAA,MACJ;AAEA,YAAM,UAAU,MAAM,WAAW,YAAY;AACzC,kBAAM,gCAAe;AAAA,UACjB,MAAM;AAAA,UACN,YAAY;AAAA,UACZ,UAAU;AAAA,UACV,UAAU;AAAA,UACV;AAAA,UACA;AAAA,UACA;AAAA,UACA,YAAY;AAAA,QAChB,CAAC;AACD,YAAI,iBAA6B,CAAC;AAClC,yBAAiB,SAAS,OAAO,UAAQ,KAAK,OAAO,UAAU;AAC/D,uBAAe,QAAQ,UAAQ;AAC3B,uBAAa,KAAK,OAAO;AAAA,QAC7B,CAAC;AAED,mBAAW,SAAS,OAAO,UAAQ,KAAK,QAAQ,UAAU;AAC1D,kCAAM,CAAC,EAAE,MAAM,eAAe,CAAC,CAAC;AAAA,MACpC,GAAG,SAAS,QAAQ,KAAK,CAAC;AAE1B,UAAI,SAAS;AACT,iBAAS,KAAK,EAAE,KAAK,YAAY,QAAiB,CAAC;AAAA,MACvD;AAAA,IACJ;AACA,WAAO;AAAA,EACX,SAAS,GAAQ;AACb,8BAAM;AAAA,MACF,EAAE,MAAM,UAAU,KAAK,EAAE,QAAQ;AAAA,MACjC,EAAE,MAAM,UAAU,KAAK,EAAE,MAAM;AAAA,IACnC,CAAC;AAAA,EACL;AACA,SAAO;AACX;",
  "names": ["TelegramMenu", "error"]
}
