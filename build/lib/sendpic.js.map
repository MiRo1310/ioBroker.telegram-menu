{
  "version": 3,
  "sources": ["../../src/lib/sendpic.ts"],
  "sourcesContent": ["import { sendToTelegram } from \"./telegram\";\r\nimport { replaceAll } from \"./utilities\";\r\nimport { exec } from \"child_process\";\r\nimport { debug, error } from \"./logging\";\r\nimport TelegramMenu from \"../main\";\r\nimport { Part, UserListWithChatId, Timeouts } from \"./telegram-menu\";\r\n\r\nfunction sendPic(\r\n\tpart: Part,\r\n\tuserToSend: string,\r\n\tinstanceTelegram: string,\r\n\tresize_keyboard: boolean,\r\n\tone_time_keyboard: boolean,\r\n\tuserListWithChatID: UserListWithChatId[],\r\n\ttoken: string,\r\n\tdirectoryPicture: string,\r\n\ttimeouts: Timeouts[],\r\n\ttimeoutKey: string,\r\n): Timeouts[] {\r\n\ttry {\r\n\t\tpart.sendPic?.forEach((element) => {\r\n\t\t\tconst _this = TelegramMenu.getInstance();\r\n\t\t\tlet path = \"\";\r\n\t\t\tif (element.id != \"-\") {\r\n\t\t\t\tconst url = element.id;\r\n\t\t\t\tconst newUrl = replaceAll(url, \"&amp;\", \"&\");\r\n\r\n\t\t\t\texec(\r\n\t\t\t\t\t`curl -H \"Autorisation: Bearer ${token.trim()}\" \"${newUrl}\" > ${directoryPicture}${element.fileName}`,\r\n\t\t\t\t\t(error: any, stdout: any, stderr: any) => {\r\n\t\t\t\t\t\tif (stdout) {\r\n\t\t\t\t\t\t\tdebug([{ text: \"Stdout:\", val: stdout }]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (stderr) {\r\n\t\t\t\t\t\t\tdebug([{ text: \"Stderr:\", val: stderr }]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (error) {\r\n\t\t\t\t\t\t\terror([{ text: \"Error:\", val: error }]);\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t);\r\n\r\n\t\t\t\tdebug([{ text: \"Delay Time:\", val: element.delay }]);\r\n\t\t\t\ttimeoutKey += 1;\r\n\t\t\t\tpath = `${directoryPicture}${element.fileName}`;\r\n\t\t\t\tdebug([{ text: \"Path : \", val: path }]);\r\n\t\t\t} else {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst timeout = _this.setTimeout(async () => {\r\n\t\t\t\tsendToTelegram(userToSend, path, undefined, instanceTelegram, resize_keyboard, one_time_keyboard, userListWithChatID, \"\");\r\n\t\t\t\tlet timeoutToClear: Timeouts[] = [];\r\n\t\t\t\ttimeoutToClear = timeouts.filter((item) => item.key == timeoutKey);\r\n\t\t\t\ttimeoutToClear.forEach((item) => {\r\n\t\t\t\t\tclearTimeout(item.timeout);\r\n\t\t\t\t});\r\n\r\n\t\t\t\ttimeouts = timeouts.filter((item) => item.key !== timeoutKey);\r\n\t\t\t\tdebug([{ text: \"Picture sended\" }]);\r\n\t\t\t}, parseInt(element.delay));\r\n\r\n\t\t\tif (timeout) {\r\n\t\t\t\ttimeouts.push({ key: timeoutKey, timeout: timeout });\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn timeouts;\r\n\t} catch (e: any) {\r\n\t\terror([\r\n\t\t\t{ text: \"Error:\", val: e.message },\r\n\t\t\t{ text: \"Stack:\", val: e.stack },\r\n\t\t]);\r\n\t}\r\n\treturn timeouts;\r\n}\r\n\r\nexport { sendPic };\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA+B;AAC/B,uBAA2B;AAC3B,2BAAqB;AACrB,qBAA6B;AAC7B,kBAAyB;AAGzB,SAAS,QACR,MACA,YACA,kBACA,iBACA,mBACA,oBACA,OACA,kBACA,UACA,YACa;AAlBd;AAmBC,MAAI;AACH,eAAK,YAAL,mBAAc,QAAQ,CAAC,YAAY;AAClC,YAAM,QAAQ,YAAAA,QAAa,YAAY;AACvC,UAAI,OAAO;AACX,UAAI,QAAQ,MAAM,KAAK;AACtB,cAAM,MAAM,QAAQ;AACpB,cAAM,aAAS,6BAAW,KAAK,SAAS,GAAG;AAE3C;AAAA,UACC,iCAAiC,MAAM,KAAK,OAAO,aAAa,mBAAmB,QAAQ;AAAA,UAC3F,CAACC,QAAY,QAAa,WAAgB;AACzC,gBAAI,QAAQ;AACX,wCAAM,CAAC,EAAE,MAAM,WAAW,KAAK,OAAO,CAAC,CAAC;AAAA,YACzC;AACA,gBAAI,QAAQ;AACX,wCAAM,CAAC,EAAE,MAAM,WAAW,KAAK,OAAO,CAAC,CAAC;AAAA,YACzC;AACA,gBAAIA,QAAO;AACV,cAAAA,OAAM,CAAC,EAAE,MAAM,UAAU,KAAKA,OAAM,CAAC,CAAC;AACtC;AAAA,YACD;AAAA,UACD;AAAA,QACD;AAEA,kCAAM,CAAC,EAAE,MAAM,eAAe,KAAK,QAAQ,MAAM,CAAC,CAAC;AACnD,sBAAc;AACd,eAAO,GAAG,mBAAmB,QAAQ;AACrC,kCAAM,CAAC,EAAE,MAAM,WAAW,KAAK,KAAK,CAAC,CAAC;AAAA,MACvC,OAAO;AACN;AAAA,MACD;AAEA,YAAM,UAAU,MAAM,WAAW,YAAY;AAC5C,4CAAe,YAAY,MAAM,QAAW,kBAAkB,iBAAiB,mBAAmB,oBAAoB,EAAE;AACxH,YAAI,iBAA6B,CAAC;AAClC,yBAAiB,SAAS,OAAO,CAAC,SAAS,KAAK,OAAO,UAAU;AACjE,uBAAe,QAAQ,CAAC,SAAS;AAChC,uBAAa,KAAK,OAAO;AAAA,QAC1B,CAAC;AAED,mBAAW,SAAS,OAAO,CAAC,SAAS,KAAK,QAAQ,UAAU;AAC5D,kCAAM,CAAC,EAAE,MAAM,iBAAiB,CAAC,CAAC;AAAA,MACnC,GAAG,SAAS,QAAQ,KAAK,CAAC;AAE1B,UAAI,SAAS;AACZ,iBAAS,KAAK,EAAE,KAAK,YAAY,QAAiB,CAAC;AAAA,MACpD;AAAA,IACD;AACA,WAAO;AAAA,EACR,SAAS,GAAP;AACD,8BAAM;AAAA,MACL,EAAE,MAAM,UAAU,KAAK,EAAE,QAAQ;AAAA,MACjC,EAAE,MAAM,UAAU,KAAK,EAAE,MAAM;AAAA,IAChC,CAAC;AAAA,EACF;AACA,SAAO;AACR;",
  "names": ["TelegramMenu", "error"]
}
