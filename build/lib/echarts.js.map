{
  "version": 3,
  "sources": ["../../src/lib/echarts.ts"],
  "sourcesContent": ["import TelegramMenu from '../main';\nimport { error } from './logging';\nimport { sendToTelegram } from './telegram';\nimport type { Echart, UserListWithChatId } from './telegram-menu';\nfunction getChart(\n    echarts: Echart[],\n    directoryPicture: string,\n    user: string,\n    instanceTelegram: string,\n    userListWithChatID: UserListWithChatId[],\n    resize_keyboard: boolean,\n    one_time_keyboard: boolean,\n): void {\n    const _this = TelegramMenu.getInstance();\n    try {\n        if (!echarts) {\n            return;\n        }\n        for (const echart of echarts) {\n            const splitted = echart.preset.split('.');\n            const echartInstance = `${splitted[0]}.${splitted[1]}`;\n            //TODO: Is filename ein string?\n            _this.sendTo(\n                echartInstance,\n                {\n                    preset: echart.preset,\n                    renderer: 'jpg',\n                    background: echart.background,\n                    theme: echart.theme,\n                    quality: 1.0,\n                    fileOnDisk: directoryPicture + echart.filename,\n                },\n                (result: any) => {\n                    sendToTelegram(\n                        user,\n                        result.error || directoryPicture + echart.filename,\n                        [],\n                        instanceTelegram,\n                        resize_keyboard,\n                        one_time_keyboard,\n                        userListWithChatID,\n                        '',\n                    ).catch((e: any) => {\n                        error([\n                            { text: 'Error', val: e.message },\n                            { text: 'Stack', val: e.stack },\n                        ]);\n                    });\n                },\n            );\n        }\n    } catch (e: any) {\n        error([\n            { text: 'Error:', val: e.message },\n            { text: 'Stack:', val: e.stack },\n        ]);\n    }\n}\nexport { getChart };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAyB;AACzB,qBAAsB;AACtB,sBAA+B;AAE/B,SAAS,SACL,SACA,kBACA,MACA,kBACA,oBACA,iBACA,mBACI;AACJ,QAAM,QAAQ,YAAAA,QAAa,YAAY;AACvC,MAAI;AACA,QAAI,CAAC,SAAS;AACV;AAAA,IACJ;AACA,eAAW,UAAU,SAAS;AAC1B,YAAM,WAAW,OAAO,OAAO,MAAM,GAAG;AACxC,YAAM,iBAAiB,GAAG,SAAS,CAAC,CAAC,IAAI,SAAS,CAAC,CAAC;AAEpD,YAAM;AAAA,QACF;AAAA,QACA;AAAA,UACI,QAAQ,OAAO;AAAA,UACf,UAAU;AAAA,UACV,YAAY,OAAO;AAAA,UACnB,OAAO,OAAO;AAAA,UACd,SAAS;AAAA,UACT,YAAY,mBAAmB,OAAO;AAAA,QAC1C;AAAA,QACA,CAAC,WAAgB;AACb;AAAA,YACI;AAAA,YACA,OAAO,SAAS,mBAAmB,OAAO;AAAA,YAC1C,CAAC;AAAA,YACD;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,UACJ,EAAE,MAAM,CAAC,MAAW;AAChB,sCAAM;AAAA,cACF,EAAE,MAAM,SAAS,KAAK,EAAE,QAAQ;AAAA,cAChC,EAAE,MAAM,SAAS,KAAK,EAAE,MAAM;AAAA,YAClC,CAAC;AAAA,UACL,CAAC;AAAA,QACL;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ,SAAS,GAAQ;AACb,8BAAM;AAAA,MACF,EAAE,MAAM,UAAU,KAAK,EAAE,QAAQ;AAAA,MACjC,EAAE,MAAM,UAAU,KAAK,EAAE,MAAM;AAAA,IACnC,CAAC;AAAA,EACL;AACJ;",
  "names": ["TelegramMenu"]
}
