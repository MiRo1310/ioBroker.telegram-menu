{
  "version": 3,
  "sources": ["../../src/lib/logging.ts"],
  "sourcesContent": ["import TelegramMenu from \"../main\";\r\n\r\ninterface LoggingTypes {\r\n\ttext?: string;\r\n\tval?: any;\r\n}\r\n[];\r\n\r\ntype Logging = \"debug\" | \"error\" | \"info\";\r\nlet _this: TelegramMenu;\r\nconst logging = (type: Logging, obj: LoggingTypes[]): void => {\r\n\tif (!_this) {\r\n\t\t_this = TelegramMenu.getInstance();\r\n\t}\r\n\tif (obj) {\r\n\t\tobj.forEach((element) => {\r\n\t\t\tlet text: string = \"\";\r\n\t\t\tif (element.text) {\r\n\t\t\t\ttext = element.text;\r\n\t\t\t}\r\n\t\t\tif (element.val) {\r\n\t\t\t\ttext += \" \" + JSON.stringify(element.val);\r\n\t\t\t}\r\n\t\t\t_this.log[type](text);\r\n\t\t});\r\n\t\treturn;\r\n\t}\r\n};\r\nexport const info = (obj: LoggingTypes[]): void => {\r\n\tlogging(\"info\", obj);\r\n};\r\n\r\nexport const debug = (obj: LoggingTypes[]): void => {\r\n\tlogging(\"debug\", obj);\r\n};\r\n\r\nexport const error = (obj: LoggingTypes[]): void => {\r\n\tlogging(\"error\", obj);\r\n};\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAyB;AAMzB,CAAC;AAGD,IAAI;AACJ,MAAM,UAAU,CAAC,MAAe,QAA8B;AAC7D,MAAI,CAAC,OAAO;AACX,YAAQ,YAAAA,QAAa,YAAY;AAAA,EAClC;AACA,MAAI,KAAK;AACR,QAAI,QAAQ,CAAC,YAAY;AACxB,UAAI,OAAe;AACnB,UAAI,QAAQ,MAAM;AACjB,eAAO,QAAQ;AAAA,MAChB;AACA,UAAI,QAAQ,KAAK;AAChB,gBAAQ,MAAM,KAAK,UAAU,QAAQ,GAAG;AAAA,MACzC;AACA,YAAM,IAAI,MAAM,IAAI;AAAA,IACrB,CAAC;AACD;AAAA,EACD;AACD;AACO,MAAM,OAAO,CAAC,QAA8B;AAClD,UAAQ,QAAQ,GAAG;AACpB;AAEO,MAAM,QAAQ,CAAC,QAA8B;AACnD,UAAQ,SAAS,GAAG;AACrB;AAEO,MAAM,QAAQ,CAAC,QAA8B;AACnD,UAAQ,SAAS,GAAG;AACrB;",
  "names": ["TelegramMenu"]
}
