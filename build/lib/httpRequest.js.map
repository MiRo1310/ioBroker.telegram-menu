{
  "version": 3,
  "sources": ["../../src/lib/httpRequest.ts"],
  "sourcesContent": ["import axios from \"axios\";\r\nimport { sendToTelegram } from \"./telegram\";\r\nimport path from \"path\";\r\nimport fs from \"fs\";\r\nimport { debug, error } from \"./logging\";\r\nimport { Part, UserListWithChatId } from \"./telegram-menu\";\r\nasync function httpRequest(\r\n\tparts: Part,\r\n\tuserToSend: string,\r\n\tinstanceTelegram: string,\r\n\tresize_keyboard: boolean,\r\n\tone_time_keyboard: boolean,\r\n\tuserListWithChatID: UserListWithChatId[],\r\n\tdirectoryPicture: string,\r\n): Promise<boolean | undefined> {\r\n\tif (!parts.httpRequest) {\r\n\t\treturn;\r\n\t}\r\n\tfor (const part of parts.httpRequest) {\r\n\t\tconst url = part.url;\r\n\t\tconst user = part.user;\r\n\t\tconst password = part.password;\r\n\t\tconst method = \"get\";\r\n\r\n\t\ttry {\r\n\t\t\t//prettier-ignore\r\n\t\t\tconst response = await axios(\r\n\t\t\t\tuser && password\r\n\t\t\t\t\t? {\r\n\t\t\t\t\t\tmethod: method,\r\n\t\t\t\t\t\turl: url,\r\n\t\t\t\t\t\tresponseType: \"arraybuffer\",\r\n\t\t\t\t\t\tauth: {\r\n\t\t\t\t\t\t\tusername: user,\r\n\t\t\t\t\t\t\tpassword: password,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t}\r\n\t\t\t\t\t: {\r\n\t\t\t\t\t\tmethod: method,\r\n\t\t\t\t\t\turl: url,\r\n\t\t\t\t\t\tresponseType: \"arraybuffer\",\r\n\t\t\t\t\t},\r\n\t\t\t);\r\n\t\t\tif (!part.filename) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tconst imagePath = path.join(directoryPicture, part.filename);\r\n\r\n\t\t\tfs.writeFileSync(imagePath, Buffer.from(response.data), \"binary\");\r\n\t\t\tdebug([{ text: \"Pic saved:\", val: imagePath }]);\r\n\r\n\t\t\tsendToTelegram(user, imagePath, [], instanceTelegram, resize_keyboard, one_time_keyboard, userListWithChatID, \"\");\r\n\t\t} catch (e: any) {\r\n\t\t\terror([\r\n\t\t\t\t{ text: \"Error:\", val: e.message },\r\n\t\t\t\t{ text: \"Stack:\", val: e.stack },\r\n\t\t\t\t{ text: \"Server Response:\", val: e.response.status },\r\n\t\t\t\t{ text: \"Server data:\", val: e.response.data },\r\n\t\t\t]);\r\n\t\t}\r\n\t}\r\n\treturn true;\r\n}\r\nexport { httpRequest };\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAkB;AAClB,sBAA+B;AAC/B,kBAAiB;AACjB,gBAAe;AACf,qBAA6B;AAE7B,eAAe,YACd,OACA,YACA,kBACA,iBACA,mBACA,oBACA,kBAC+B;AAC/B,MAAI,CAAC,MAAM,aAAa;AACvB;AAAA,EACD;AACA,aAAW,QAAQ,MAAM,aAAa;AACrC,UAAM,MAAM,KAAK;AACjB,UAAM,OAAO,KAAK;AAClB,UAAM,WAAW,KAAK;AACtB,UAAM,SAAS;AAEf,QAAI;AAEH,YAAM,WAAW,UAAM,aAAAA;AAAA,QACtB,QAAQ,WACL;AAAA,UACD;AAAA,UACA;AAAA,UACA,cAAc;AAAA,UACd,MAAM;AAAA,YACL,UAAU;AAAA,YACV;AAAA,UACD;AAAA,QACD,IACE;AAAA,UACD;AAAA,UACA;AAAA,UACA,cAAc;AAAA,QACf;AAAA,MACF;AACA,UAAI,CAAC,KAAK,UAAU;AACnB;AAAA,MACD;AACA,YAAM,YAAY,YAAAC,QAAK,KAAK,kBAAkB,KAAK,QAAQ;AAE3D,gBAAAC,QAAG,cAAc,WAAW,OAAO,KAAK,SAAS,IAAI,GAAG,QAAQ;AAChE,gCAAM,CAAC,EAAE,MAAM,cAAc,KAAK,UAAU,CAAC,CAAC;AAE9C,0CAAe,MAAM,WAAW,CAAC,GAAG,kBAAkB,iBAAiB,mBAAmB,oBAAoB,EAAE;AAAA,IACjH,SAAS,GAAP;AACD,gCAAM;AAAA,QACL,EAAE,MAAM,UAAU,KAAK,EAAE,QAAQ;AAAA,QACjC,EAAE,MAAM,UAAU,KAAK,EAAE,MAAM;AAAA,QAC/B,EAAE,MAAM,oBAAoB,KAAK,EAAE,SAAS,OAAO;AAAA,QACnD,EAAE,MAAM,gBAAgB,KAAK,EAAE,SAAS,KAAK;AAAA,MAC9C,CAAC;AAAA,IACF;AAAA,EACD;AACA,SAAO;AACR;",
  "names": ["axios", "path", "fs"]
}
