{
  "version": 3,
  "sources": ["../../src/lib/json.ts"],
  "sourcesContent": ["import { errorLogger } from '../app/logging';\nimport type { Adapter } from '../types/types';\n\nexport const escapeJsonString = (input: string): string => {\n    return input\n        .replace(/\\\\/g, '\\\\\\\\') // Escape Backslashes\n        .replace(/\"/g, '\\\\\"') // Escape doppelte Anf\u00FChrungszeichen\n        .replace(/'/g, '\"'); // Ersetze einfache Anf\u00FChrungszeichen durch doppelte\n};\n\nexport const makeValidJson = (input: string, adapter: Adapter): { validJson: string; error: boolean } => {\n    try {\n        // Entferne unn\u00F6tige Leerzeichen und \u00FCberpr\u00FCfe die Struktur\n        const sanitizedInput = input.trim();\n\n        // Versuche, den String direkt zu parsen\n        const parsed = JSON.parse(sanitizedInput);\n        return { validJson: JSON.stringify(parsed), error: false };\n    } catch (error) {\n        console.log(error);\n        // Wenn der direkte Parse-Versuch fehlschl\u00E4gt, wende Escaping an\n        try {\n            const escapedString = escapeJsonString(input);\n            const parsed = JSON.parse(escapedString);\n            return { validJson: JSON.stringify(parsed), error: false };\n        } catch (innerError) {\n            errorLogger('Error makeValidJson:', innerError, adapter);\n            return { validJson: input, error: true };\n        }\n    }\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAA4B;AAGrB,MAAM,mBAAmB,CAAC,UAA0B;AACvD,SAAO,MACF,QAAQ,OAAO,MAAM,EACrB,QAAQ,MAAM,KAAK,EACnB,QAAQ,MAAM,GAAG;AAC1B;AAEO,MAAM,gBAAgB,CAAC,OAAe,YAA4D;AACrG,MAAI;AAEA,UAAM,iBAAiB,MAAM,KAAK;AAGlC,UAAM,SAAS,KAAK,MAAM,cAAc;AACxC,WAAO,EAAE,WAAW,KAAK,UAAU,MAAM,GAAG,OAAO,MAAM;AAAA,EAC7D,SAAS,OAAO;AACZ,YAAQ,IAAI,KAAK;AAEjB,QAAI;AACA,YAAM,gBAAgB,iBAAiB,KAAK;AAC5C,YAAM,SAAS,KAAK,MAAM,aAAa;AACvC,aAAO,EAAE,WAAW,KAAK,UAAU,MAAM,GAAG,OAAO,MAAM;AAAA,IAC7D,SAAS,YAAY;AACjB,sCAAY,wBAAwB,YAAY,OAAO;AACvD,aAAO,EAAE,WAAW,OAAO,OAAO,KAAK;AAAA,IAC3C;AAAA,EACJ;AACJ;",
  "names": []
}
