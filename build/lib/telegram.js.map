{
  "version": 3,
  "sources": ["../../src/lib/telegram.ts"],
  "sourcesContent": ["import { debug, error } from \"./logging\";\r\nimport { newLine, getChatID, checkStatusInfo } from \"./utilities\";\r\nimport TelegramMenu from \"../main\";\r\nimport { NavPart, UserListWithChatId, BooleanString, ParseModeType } from \"./telegram-menu\";\r\n\r\nasync function sendToTelegram(\r\n\tuser = \"\",\r\n\ttextToSend: string,\r\n\tkeyboard: NavPart = [],\r\n\tinstance = \"telegram.0\",\r\n\tresize_keyboard = true,\r\n\tone_time_keyboard = true,\r\n\tuserListWithChatID: UserListWithChatId[],\r\n\tparse_mode: BooleanString | \"\",\r\n): Promise<void> {\r\n\ttry {\r\n\t\tconst _this = TelegramMenu.getInstance();\r\n\t\tconst chatId = getChatID(userListWithChatID, user);\r\n\t\tconst parse_modeType: ParseModeType = getParseMode(parse_mode);\r\n\t\tdebug([\r\n\t\t\t{ text: `Send to: ${user} => ${textToSend}` },\r\n\t\t\t{ text: \"Instance:\", val: instance },\r\n\t\t\t{ text: \"UserListWithChatID\t:\", val: userListWithChatID },\r\n\t\t\t{ text: \"Parse_mode\t:\", val: parse_mode },\r\n\t\t\t{ text: \"ChatId\t:\", val: chatId },\r\n\t\t\t{ text: \"ParseModeType:\", val: parse_modeType },\r\n\t\t]);\r\n\r\n\t\ttextToSend = newLine(textToSend);\r\n\t\tif (keyboard.length == 0) {\r\n\t\t\t_this.sendTo(\r\n\t\t\t\tinstance,\r\n\t\t\t\t\"send\",\r\n\t\t\t\t{\r\n\t\t\t\t\ttext: textToSend,\r\n\t\t\t\t\tchatId: chatId,\r\n\t\t\t\t\tparse_mode: parse_modeType,\r\n\t\t\t\t},\r\n\t\t\t\tfunction (res: any) {\r\n\t\t\t\t\t_this.log.debug(\"Sent Value to \" + JSON.stringify(res) + \" users!\");\r\n\t\t\t\t},\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tconst text = await checkStatusInfo(textToSend);\r\n\t\t\t_this.sendTo(\r\n\t\t\t\tinstance,\r\n\t\t\t\t\"send\",\r\n\t\t\t\t{\r\n\t\t\t\t\tchatId: chatId,\r\n\t\t\t\t\tparse_mode: parse_modeType,\r\n\t\t\t\t\ttext: text,\r\n\t\t\t\t\treply_markup: {\r\n\t\t\t\t\t\tkeyboard: keyboard,\r\n\t\t\t\t\t\tresize_keyboard: resize_keyboard,\r\n\t\t\t\t\t\tone_time_keyboard: one_time_keyboard,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\tfunction (res: any) {\r\n\t\t\t\t\tdebug([{ text: `Sent Value to ${res} users!` }]);\r\n\t\t\t\t},\r\n\t\t\t);\r\n\t\t}\r\n\t} catch (e: any) {\r\n\t\terror([\r\n\t\t\t{ text: \"Error sendToTelegram:\", val: e.message },\r\n\t\t\t{ text: \"Stack:\", val: e.stack },\r\n\t\t]);\r\n\t}\r\n}\r\n\r\nfunction sendToTelegramSubmenu(\r\n\tuser: string,\r\n\ttextToSend: string,\r\n\tkeyboard: string,\r\n\tinstance = \"telegram.0\",\r\n\tuserListWithChatID: UserListWithChatId[],\r\n\tparse_mode: BooleanString,\r\n): void {\r\n\tconst _this = TelegramMenu.getInstance();\r\n\tconst parseModeType = getParseMode(parse_mode);\r\n\tdebug([{ text: \"Send this ParseMode:\", val: parseModeType }]);\r\n\ttry {\r\n\t\tconst chatId = getChatID(userListWithChatID, user);\r\n\t\ttextToSend = newLine(textToSend);\r\n\t\t_this.sendTo(instance, \"send\", {\r\n\t\t\tchatId: chatId,\r\n\t\t\tparse_mode: parseModeType,\r\n\t\t\ttext: textToSend,\r\n\t\t\treply_markup: keyboard,\r\n\t\t});\r\n\t} catch (e: any) {\r\n\t\terror([\r\n\t\t\t{ text: \"Error sendToTelegramSubmenu:\", val: e.message },\r\n\t\t\t{ text: \"Stack:\", val: e.stack },\r\n\t\t]);\r\n\t}\r\n}\r\n\r\nconst sendLocationToTelegram = async (user: string, data: any, instance: string, userListWithChatID: UserListWithChatId[]): Promise<void> => {\r\n\tconst _this = TelegramMenu.getInstance();\r\n\ttry {\r\n\t\tconst chatId = getChatID(userListWithChatID, user);\r\n\t\tfor (const element of data) {\r\n\t\t\tif (!(element.latitude || element.longitude)) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tconst latitude = await _this.getForeignStateAsync(element.latitude);\r\n\t\t\tconst longitude = await _this.getForeignStateAsync(element.longitude);\r\n\t\t\tif (!latitude || !longitude) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\t_this.sendTo(instance, {\r\n\t\t\t\tchatId: chatId,\r\n\t\t\t\tlatitude: latitude.val,\r\n\t\t\t\tlongitude: longitude.val,\r\n\t\t\t\tdisable_notification: true,\r\n\t\t\t});\r\n\t\t}\r\n\t} catch (e: any) {\r\n\t\terror([\r\n\t\t\t{ text: \"Error sendLocationToTelegram:\", val: e.message },\r\n\t\t\t{ text: \"Stack:\", val: e.stack },\r\n\t\t]);\r\n\t}\r\n};\r\n\r\nfunction getParseMode(val: BooleanString | boolean | \"\"): ParseModeType {\r\n\tif (val === \"true\" || val === true) {\r\n\t\treturn \"HTML\";\r\n\t}\r\n\treturn \"Markdown\";\r\n}\r\n\r\nexport { sendToTelegram, sendToTelegramSubmenu, sendLocationToTelegram };\r\n"],
  "mappings": "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",
  "names": ["TelegramMenu"]
}
