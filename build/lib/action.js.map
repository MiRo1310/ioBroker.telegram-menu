{
  "version": 3,
  "sources": ["../../src/lib/action.ts"],
  "sourcesContent": ["import { sendToTelegram } from \"./telegram.js\";\r\nimport { decomposeText } from \"./global\";\r\nimport { callSubMenu } from \"./subMenu.js\";\r\nimport { sendNav } from \"./sendNav.js\";\r\nimport { backMenuFunc } from \"./backMenu.js\";\r\nimport { debug, error } from \"./logging.js\";\r\nimport TelegramMenu from \"../main.js\";\r\nimport {\r\n\tUserListWithChatId,\r\n\tBooleanString,\r\n\tBindingObject,\r\n\tEditArrayButtons,\r\n\tGeneratedNavMenu,\r\n\tNewline,\r\n\tNewObjectNavStructure,\r\n\tActions,\r\n\tGenerateActionsArrayOfEntries,\r\n\tSwitch,\r\n\tUserObjectActions,\r\n\tGenerateActionsNewObject,\r\n\tNewObjectNavStructureKey,\r\n\tPart,\r\n\tDataObject,\r\n\tMenuData,\r\n\tUserInGroup,\r\n\tMenusWithUsers,\r\n} from \"./telegram-menu.js\";\r\n\r\nconst bindingFunc = async (\r\n\ttext: string,\r\n\tuserToSend: string,\r\n\ttelegramInstance: string,\r\n\tone_time_keyboard: boolean,\r\n\tresize_keyboard: boolean,\r\n\tuserListWithChatID: UserListWithChatId[],\r\n\tparse_mode: BooleanString,\r\n): Promise<void> => {\r\n\tconst _this = TelegramMenu.getInstance();\r\n\tlet value;\r\n\r\n\ttry {\r\n\t\tconst substring = decomposeText(text, \"binding:\", \"}\").substring;\r\n\t\tconst arrayOfItems = substring.replace(\"binding:{\", \"\").replace(\"}\", \"\").split(\";\");\r\n\t\tconst bindingObject: BindingObject = {\r\n\t\t\tvalues: {},\r\n\t\t};\r\n\r\n\t\tfor (let item of arrayOfItems) {\r\n\t\t\tif (!item.includes(\"?\")) {\r\n\t\t\t\tconst key = item.split(\":\")[0];\r\n\t\t\t\tconst id = item.split(\":\")[1];\r\n\r\n\t\t\t\tconst result = await _this.getForeignStateAsync(id);\r\n\t\t\t\tif (result) {\r\n\t\t\t\t\tbindingObject.values[key] = result.val?.toString() || \"\";\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tObject.keys(bindingObject.values).forEach(function (key) {\r\n\t\t\t\t\titem = item.replace(key, bindingObject.values[key]);\r\n\t\t\t\t});\r\n\r\n\t\t\t\tvalue = eval(item);\r\n\t\t\t}\r\n\t\t}\r\n\t\tsendToTelegram(userToSend, value, undefined, telegramInstance, one_time_keyboard, resize_keyboard, userListWithChatID, parse_mode);\r\n\t} catch (e: any) {\r\n\t\terror([\r\n\t\t\t{ text: \"Error:\", val: e.message },\r\n\t\t\t{ text: \"Stack:\", val: e.stack },\r\n\t\t]);\r\n\t}\r\n};\r\n\r\nfunction calcValue(_this: any, textToSend: string, val: string): { textToSend: string; val: string } | undefined {\r\n\tconst { substring } = decomposeText(textToSend, \"{math:\", \"}\");\r\n\tconst mathValue = substring.replace(\"{math:\", \"\").replace(\"}\", \"\");\r\n\ttry {\r\n\t\tval = eval(val + mathValue);\r\n\t\ttextToSend = textToSend.replace(substring, \"\");\r\n\r\n\t\treturn { textToSend: textToSend, val: val };\r\n\t} catch (e: any) {\r\n\t\terror([\r\n\t\t\t{ text: \"Error Eval:\", val: e.message },\r\n\t\t\t{ text: \"Stack:\", val: e.stack },\r\n\t\t]);\r\n\t}\r\n}\r\n\r\nfunction checkValueForOneLine(text: string): string {\r\n\tif (!text.includes(\"&&\")) {\r\n\t\treturn text + \"&&\";\r\n\t}\r\n\treturn text;\r\n}\r\n\r\nasync function editArrayButtons(val: EditArrayButtons[], _this: any): Promise<GeneratedNavMenu[] | null> {\r\n\tconst newVal: GeneratedNavMenu[] = [];\r\n\ttry {\r\n\t\tval.forEach((element) => {\r\n\t\t\tlet value = \"\";\r\n\t\t\tif (typeof element.value === \"string\") {\r\n\t\t\t\tvalue = checkValueForOneLine(element.value);\r\n\t\t\t}\r\n\t\t\tlet array: string[] | string[][] = [];\r\n\t\t\tif (value.indexOf(\"&&\") != -1) {\r\n\t\t\t\tarray = value.split(\"&&\");\r\n\t\t\t}\r\n\r\n\t\t\tif (array.length > 1) {\r\n\t\t\t\tarray.forEach(function (element, index: number) {\r\n\t\t\t\t\tif (typeof element === \"string\") {\r\n\t\t\t\t\t\tlet navArray = element.split(\",\");\r\n\t\t\t\t\t\tnavArray = navArray.map((item) => item.trim());\r\n\t\t\t\t\t\tarray[index] = navArray;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t} else if (typeof element.value === \"string\") {\r\n\t\t\t\tarray = element.value.split(\",\");\r\n\t\t\t\tarray.forEach(function (element, index: number) {\r\n\t\t\t\t\tarray[index] = [element.trim()];\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tnewVal.push({ call: element.call, text: element.text, parse_mode: element.parse_mode, nav: array });\r\n\t\t});\r\n\r\n\t\treturn newVal;\r\n\t} catch (err: any) {\r\n\t\terror([\r\n\t\t\t{ text: \"Error EditArray:\", val: err.message },\r\n\t\t\t{ text: \"Stack:\", val: err.stack },\r\n\t\t]);\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\nconst idBySelector = async (\r\n\t_this: any,\r\n\tselector: string,\r\n\ttext: string,\r\n\tuserToSend: string,\r\n\tnewline: Newline,\r\n\ttelegramInstance: string,\r\n\tone_time_keyboard: boolean,\r\n\tresize_keyboard: boolean,\r\n\tuserListWithChatID: UserListWithChatId[],\r\n): Promise<void> => {\r\n\tlet text2Send = \"\";\r\n\ttry {\r\n\t\tif (!selector.includes(\"functions\")) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst functions = selector.replace(\"functions=\", \"\");\r\n\t\tlet enums = [];\r\n\t\tconst result = await _this.getEnumsAsync();\r\n\r\n\t\tif (!result || !result[\"enum.functions\"][`enum.functions.${functions}`]) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tenums = result[\"enum.functions\"][`enum.functions.${functions}`].common.members;\r\n\t\tif (!enums) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst promises = enums.map(async (id: string) => {\r\n\t\t\tconst value = await _this.getForeignStateAsync(id);\r\n\t\t\tif (value && value.val !== undefined && value.val !== null) {\r\n\t\t\t\tlet newText = text;\r\n\t\t\t\tlet res;\r\n\r\n\t\t\t\tif (text.includes(\"{common.name}\")) {\r\n\t\t\t\t\tres = await _this.getForeignObjectAsync(id);\r\n\t\t\t\t\t_this.log.debug(\"Name \" + JSON.stringify(res.common.name));\r\n\r\n\t\t\t\t\tif (res && res.common.name) {\r\n\t\t\t\t\t\tnewText = newText.replace(\"{common.name}\", res.common.name);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (text.includes(\"&amp;&amp;\")) {\r\n\t\t\t\t\ttext2Send += newText.replace(\"&amp;&amp;\", value.val);\r\n\t\t\t\t} else if (text.includes(\"&&\")) {\r\n\t\t\t\t\ttext2Send += newText.replace(\"&&\", value.val);\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttext2Send += newText;\r\n\t\t\t\t\ttext2Send += \" \" + value.val;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (newline === \"true\") {\r\n\t\t\t\ttext2Send += \" \\n\";\r\n\t\t\t} else {\r\n\t\t\t\ttext2Send += \" \";\r\n\t\t\t}\r\n\t\t\t_this.log.debug(\"text2send \" + JSON.stringify(text2Send));\r\n\t\t});\r\n\t\tPromise.all(promises)\r\n\t\t\t.then(() => {\r\n\t\t\t\tsendToTelegram(userToSend, text2Send, undefined, telegramInstance, one_time_keyboard, resize_keyboard, userListWithChatID, \"\");\r\n\t\t\t\tdebug([\r\n\t\t\t\t\t{ text: \"TextToSend:\", val: text2Send },\r\n\t\t\t\t\t{ text: \"UserToSend:\", val: userToSend },\r\n\t\t\t\t]);\r\n\t\t\t})\r\n\t\t\t.catch((e) => {\r\n\t\t\t\terror([\r\n\t\t\t\t\t{ text: \"Error Promise:\", val: e.message },\r\n\t\t\t\t\t{ text: \"Stack:\", val: e.stack },\r\n\t\t\t\t]);\r\n\t\t\t});\r\n\t} catch (error: any) {\r\n\t\terror([\r\n\t\t\t{ text: \"Error idBySelector:\", val: error.message },\r\n\t\t\t{ text: \"Stack:\", val: error.stack },\r\n\t\t]);\r\n\t}\r\n};\r\n\r\nasync function generateNewObjectStructure(val: GeneratedNavMenu[] | null): Promise<NewObjectNavStructure | null> {\r\n\ttry {\r\n\t\tif (!val) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tconst obj: NewObjectNavStructure = {};\r\n\t\tval.forEach(function (element) {\r\n\t\t\tconst call = element.call;\r\n\t\t\tobj[call] = {\r\n\t\t\t\tnav: element.nav,\r\n\t\t\t\ttext: element.text,\r\n\t\t\t\tparse_mode: element.parse_mode == \"true\" || element.parse_mode == \"false\" ? element.parse_mode : \"false\",\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn obj;\r\n\t} catch (err: any) {\r\n\t\terror([\r\n\t\t\t{ text: \"Error GenerateNewObjectStructure:\", val: err.message },\r\n\t\t\t{ text: \"Stack:\", val: err.stack },\r\n\t\t]);\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\nfunction generateActions(action: Actions, userObject: NewObjectNavStructure): { obj: NewObjectNavStructure; ids: string[] } | undefined {\r\n\ttry {\r\n\t\tconst arrayOfEntries: GenerateActionsArrayOfEntries[] = [\r\n\t\t\t{\r\n\t\t\t\tobjName: \"echarts\",\r\n\t\t\t\tname: \"echarts\",\r\n\t\t\t\tloop: \"preset\",\r\n\t\t\t\telements: [{ name: \"preset\" }, { name: \"echartInstance\" }, { name: \"background\" }, { name: \"theme\" }, { name: \"filename\" }],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tobjName: \"loc\",\r\n\t\t\t\tname: \"location\",\r\n\t\t\t\tloop: \"latitude\",\r\n\t\t\t\telements: [{ name: \"latitude\" }, { name: \"longitude\" }, { name: \"parse_mode\", key: 0 }],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tobjName: \"pic\",\r\n\t\t\t\tname: \"sendPic\",\r\n\t\t\t\tloop: \"IDs\",\r\n\t\t\t\telements: [{ name: \"id\", value: \"IDs\" }, { name: \"fileName\" }, { name: \"delay\", value: \"picSendDelay\" }],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tobjName: \"get\",\r\n\t\t\t\tname: \"getData\",\r\n\t\t\t\tloop: \"IDs\",\r\n\t\t\t\telements: [\r\n\t\t\t\t\t{ name: \"id\", value: \"IDs\" },\r\n\t\t\t\t\t{ name: \"text\", type: \"text\" },\r\n\t\t\t\t\t{ name: \"newline\", value: \"newline_checkbox\" },\r\n\t\t\t\t\t{ name: \"parse_mode\", key: 0 },\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tobjName: \"httpRequest\",\r\n\t\t\t\tname: \"httpRequest\",\r\n\t\t\t\tloop: \"url\",\r\n\t\t\t\telements: [{ name: \"url\" }, { name: \"user\" }, { name: \"password\" }, { name: \"filename\" }],\r\n\t\t\t},\r\n\t\t];\r\n\r\n\t\tconst listOfSetStateIds: string[] = [];\r\n\t\taction.set.forEach(function (element, key) {\r\n\t\t\tif (key == 0) {\r\n\t\t\t\tuserObject[element.trigger[0]] = { switch: [] };\r\n\t\t\t}\r\n\t\t\tuserObject[element.trigger[0]] = { switch: [] };\r\n\t\t\telement.IDs.forEach(function (id: string, index: number) {\r\n\t\t\t\tlistOfSetStateIds.push(id);\r\n\t\t\t\tconst toggle = element.switch_checkbox[index] === \"true\";\r\n\t\t\t\tlet value;\r\n\r\n\t\t\t\tif (element.values[index] === \"true\" || element.values[index] === \"false\") {\r\n\t\t\t\t\tvalue = element.values[index] === \"true\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvalue = element.values[index];\r\n\t\t\t\t}\r\n\t\t\t\tconst newObj: Switch = {\r\n\t\t\t\t\tid: element.IDs[index],\r\n\t\t\t\t\tvalue: value.toString(),\r\n\t\t\t\t\ttoggle: toggle,\r\n\t\t\t\t\tconfirm: element.confirm[index],\r\n\t\t\t\t\treturnText: element.returnText[index],\r\n\t\t\t\t\tack: element.ack ? element.ack[index] : \"false\",\r\n\t\t\t\t\tparse_mode: element.parse_mode ? element.parse_mode[0] : \"false\",\r\n\t\t\t\t};\r\n\t\t\t\tif (userObject[element.trigger[0]] && userObject[element.trigger[0]]?.switch) {\r\n\t\t\t\t\tuserObject[element.trigger[0]].switch!.push(newObj);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\tarrayOfEntries.forEach((item) => {\r\n\t\t\tif (action[item.objName as keyof Actions]) {\r\n\t\t\t\taction[item.objName as keyof Actions].forEach(function (element, index: number) {\r\n\t\t\t\t\tuserObject[element.trigger[0]] = { [item.name]: [] };\r\n\t\t\t\t\tif (index == 0) {\r\n\t\t\t\t\t\tuserObject[element.trigger[0]] = { [item.name as keyof UserObjectActions]: [] };\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t(element[item.loop as keyof typeof element] as string[]).forEach(function (id: string, key: number) {\r\n\t\t\t\t\t\tconst newObj: GenerateActionsNewObject = {};\r\n\t\t\t\t\t\titem.elements.forEach((elementItem) => {\r\n\t\t\t\t\t\t\tconst name = elementItem.name;\r\n\t\t\t\t\t\t\tconst value = elementItem.value ? elementItem.value : elementItem.name;\r\n\t\t\t\t\t\t\tconst newKey = elementItem.key ? elementItem.key : key;\r\n\t\t\t\t\t\t\tlet val: string | boolean;\r\n\r\n\t\t\t\t\t\t\tif (!element[value as keyof typeof element]) {\r\n\t\t\t\t\t\t\t\tval = false;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tval = element[value as keyof typeof element][newKey] || \"false\";\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (elementItem.type == \"text\" && typeof val === \"string\") {\r\n\t\t\t\t\t\t\t\tnewObj[name as keyof GenerateActionsNewObject] = val.replace(/&amp;/g, \"&\") as any;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tnewObj[name as keyof GenerateActionsNewObject] = val as any;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tif (item.name && typeof item.name === \"string\") {\r\n\t\t\t\t\t\t\tuserObject[element.trigger as NewObjectNavStructureKey][item?.name as keyof Part].push(newObj);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn { obj: userObject, ids: listOfSetStateIds };\r\n\t} catch (err: any) {\r\n\t\terror([\r\n\t\t\t{ text: \"Error generateActions:\", val: err.message },\r\n\t\t\t{ text: \"Stack:\", val: err.stack },\r\n\t\t]);\r\n\t}\r\n}\r\n\r\nfunction roundValue(val: string, textToSend: string): { val: string; textToSend: string } | undefined {\r\n\ttry {\r\n\t\tconst floatedNumber = parseFloat(val);\r\n\t\tconst { substring, textWithoutSubstring } = decomposeText(textToSend, \"{round:\", \"}\");\r\n\r\n\t\tconst decimalPlaces = substring.split(\":\")[1].replace(\"}\", \"\");\r\n\t\tconst floatedString = floatedNumber.toFixed(parseInt(decimalPlaces));\r\n\t\treturn { val: floatedString, textToSend: textWithoutSubstring };\r\n\t} catch (err: any) {\r\n\t\terror([\r\n\t\t\t{ text: \"Error roundValue:\", val: err.message },\r\n\t\t\t{ text: \"Stack:\", val: err.stack },\r\n\t\t]);\r\n\t}\r\n}\r\n\r\nconst exchangePlaceholderWithValue = (textToSend: string, text: string | number): string => {\r\n\tlet searchString = \"\";\r\n\tif (textToSend.includes(\"&&\")) {\r\n\t\tsearchString = \"&&\";\r\n\t} else if (textToSend.includes(\"&amp;&amp;\")) {\r\n\t\tsearchString = \"&amp;&amp;\";\r\n\t}\r\n\tsearchString !== \"\" && textToSend.toString().indexOf(searchString) != -1\r\n\t\t? (textToSend = textToSend.replace(searchString, text.toString()))\r\n\t\t: (textToSend += \" \" + text);\r\n\r\n\treturn textToSend;\r\n};\r\n\r\nconst adjustValueType = (value: keyof NewObjectNavStructure, valueType: string): boolean | string | number => {\r\n\tif (valueType == \"number\") {\r\n\t\tif (!parseFloat(value as string)) {\r\n\t\t\terror([{ text: \"Error: Value is not a number:\", val: value }]);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn parseFloat(value as string);\r\n\t}\r\n\tif (valueType == \"boolean\") {\r\n\t\tif (value == \"true\") {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\terror([{ text: \"Error: Value is not a boolean:\", val: value }]);\r\n\t\treturn false;\r\n\t}\r\n\treturn value;\r\n};\r\n\r\nconst checkEvent = (\r\n\tdataObject: DataObject,\r\n\tid: string,\r\n\tstate: ioBroker.State,\r\n\tmenuData: MenuData,\r\n\tuserListWithChatID: UserListWithChatId[],\r\n\tinstanceTelegram: string,\r\n\tresize_keyboard: boolean,\r\n\tone_time_keyboard: boolean,\r\n\tusersInGroup: UserInGroup,\r\n): boolean => {\r\n\tconst menuArray: string[] = [];\r\n\tlet ok = false;\r\n\tlet calledNav = \"\";\r\n\tObject.keys(dataObject.action).forEach((menu) => {\r\n\t\tif (dataObject.action[menu] && dataObject.action[menu][\"events\"]) {\r\n\t\t\tdataObject.action[menu][\"events\"].forEach((event) => {\r\n\t\t\t\tif (event.ID[0] == id && event.ack[0] == state.ack.toString()) {\r\n\t\t\t\t\tif ((state.val == true || state.val == \"true\") && event.condition == \"true\") {\r\n\t\t\t\t\t\tok = true;\r\n\t\t\t\t\t\tmenuArray.push(menu);\r\n\t\t\t\t\t\tcalledNav = event.menu[0];\r\n\t\t\t\t\t} else if ((state.val == false || state.val == \"false\") && event.condition[0] == \"false\") {\r\n\t\t\t\t\t\tok = true;\r\n\t\t\t\t\t\tmenuArray.push(menu);\r\n\t\t\t\t\t\tcalledNav = event.menu[0];\r\n\t\t\t\t\t} else if (typeof state.val == \"number\" && state.val == parseInt(event.condition[0])) {\r\n\t\t\t\t\t\tok = true;\r\n\t\t\t\t\t\tmenuArray.push(menu);\r\n\t\t\t\t\t\tcalledNav = event.menu[0];\r\n\t\t\t\t\t} else if (state.val == event.condition[0]) {\r\n\t\t\t\t\t\tok = true;\r\n\t\t\t\t\t\tmenuArray.push(menu);\r\n\t\t\t\t\t\tcalledNav = event.menu[0];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n\tif (ok) {\r\n\t\tif (menuArray.length >= 1) {\r\n\t\t\tmenuArray.forEach((menu) => {\r\n\t\t\t\tif (usersInGroup[menu] && menuData.data[menu][calledNav as keyof DataObject]) {\r\n\t\t\t\t\tusersInGroup[menu].forEach((user: string) => {\r\n\t\t\t\t\t\tconst part = menuData.data[menu][calledNav as keyof DataObject];\r\n\t\t\t\t\t\tconst menus = Object.keys(menuData.data);\r\n\t\t\t\t\t\tif (part.nav) {\r\n\t\t\t\t\t\t\tbackMenuFunc(calledNav, part.nav, user);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (part && part.nav && JSON.stringify(part?.nav[0]).includes(\"menu:\")) {\r\n\t\t\t\t\t\t\tcallSubMenu(\r\n\t\t\t\t\t\t\t\tJSON.stringify(part?.nav[0]),\r\n\t\t\t\t\t\t\t\tmenuData,\r\n\t\t\t\t\t\t\t\tuser,\r\n\t\t\t\t\t\t\t\tinstanceTelegram,\r\n\t\t\t\t\t\t\t\tresize_keyboard,\r\n\t\t\t\t\t\t\t\tone_time_keyboard,\r\n\t\t\t\t\t\t\t\tuserListWithChatID,\r\n\t\t\t\t\t\t\t\tpart,\r\n\t\t\t\t\t\t\t\tmenuData.data,\r\n\t\t\t\t\t\t\t\tmenus,\r\n\t\t\t\t\t\t\t\tnull,\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tsendNav(part, user, instanceTelegram, userListWithChatID, resize_keyboard, one_time_keyboard);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\treturn ok;\r\n};\r\n\r\nconst getUserToSendFromUserListWithChatID = (userListWithChatID: UserListWithChatId[], chatID: ioBroker.State | undefined | null): string | null => {\r\n\tlet userToSend: string | null = null;\r\n\r\n\tif (!chatID) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\tuserListWithChatID.forEach((element) => {\r\n\t\tif (element.chatID == chatID.val) {\r\n\t\t\tuserToSend = element.name;\r\n\t\t}\r\n\r\n\t\tdebug([\r\n\t\t\t{ text: \"User and ChatID:\", val: element },\r\n\t\t\t{ text: \"User:\", val: userToSend },\r\n\t\t]);\r\n\t});\r\n\r\n\treturn userToSend;\r\n};\r\nconst getMenusWithUserToSend = (menusWithUsers: MenusWithUsers, userToSend: string): NewObjectNavStructureKey[] => {\r\n\tconst menus: NewObjectNavStructureKey[] = [];\r\n\tfor (const key in menusWithUsers) {\r\n\t\tif (menusWithUsers[key].includes(userToSend)) {\r\n\t\t\tmenus.push(key);\r\n\t\t}\r\n\t}\r\n\treturn menus;\r\n};\r\n\r\nexport {\r\n\teditArrayButtons,\r\n\tidBySelector,\r\n\tgenerateNewObjectStructure,\r\n\tgenerateActions,\r\n\tcalcValue,\r\n\troundValue,\r\n\tbindingFunc,\r\n\texchangePlaceholderWithValue,\r\n\tadjustValueType,\r\n\tcheckEvent,\r\n\tgetUserToSendFromUserListWithChatID,\r\n\tgetMenusWithUserToSend,\r\n};\r\n"],
  "mappings": "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",
  "names": ["TelegramMenu", "text", "val", "_this", "value", "element", "item", "userToSend", "telegramInstance", "one_time_keyboard", "resize_keyboard", "userListWithChatID", "error", "textToSend", "substring"]
}
