{
  "version": 3,
  "sources": ["../../src/app/configVariables.ts"],
  "sourcesContent": ["import type { Checkboxes, DataObject, IsUserActiveCheckbox, TelegramParams, UserListWithChatId } from '../types/types';\n\nexport const getConfigVariables = (\n    config: ioBroker.AdapterConfig,\n): {\n    telegramID: string;\n    botSendMessageID: string;\n    requestMessageID: string;\n    infoConnectionOfTelegram: string;\n    checkboxNoEntryFound: boolean;\n    sendMenuAfterRestart: boolean;\n    listOfMenus: string[];\n    token: string;\n    directoryPicture: string;\n    isUserActiveCheckbox: IsUserActiveCheckbox;\n    menusWithUsers: Record<string, string[]>;\n    textNoEntryFound: string;\n    userListWithChatID: UserListWithChatId[];\n    dataObject: DataObject;\n    checkboxes: Checkboxes;\n    telegramParams: TelegramParams;\n} => {\n    const telegramInstance = config.instance ?? 'telegram.0';\n    const checkboxes = config.checkbox;\n    return {\n        checkboxes,\n        telegramID: `${telegramInstance}.communicate.request`,\n        botSendMessageID: `${telegramInstance}.communicate.botSendMessageId`,\n        requestMessageID: `${telegramInstance}.communicate.requestMessageId`,\n        infoConnectionOfTelegram: `${telegramInstance}.info.connection`,\n        checkboxNoEntryFound: checkboxes.checkboxNoValueFound,\n        sendMenuAfterRestart: checkboxes.sendMenuAfterRestart,\n        listOfMenus: config.usersInGroup ? Object.keys(config.usersInGroup) : [],\n        token: config.tokenGrafana,\n        directoryPicture: config.directory,\n        isUserActiveCheckbox: config.userActiveCheckbox,\n        menusWithUsers: config.usersInGroup,\n        textNoEntryFound: config.textNoEntry,\n        userListWithChatID: config.userListWithChatID,\n        dataObject: config.data,\n        telegramParams: {\n            telegramInstance,\n            resize_keyboard: checkboxes.resKey,\n            one_time_keyboard: checkboxes.oneTiKey,\n        },\n    };\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEO,MAAM,qBAAqB,CAC9B,WAkBC;AArBL;AAsBI,QAAM,oBAAmB,YAAO,aAAP,YAAmB;AAC5C,QAAM,aAAa,OAAO;AAC1B,SAAO;AAAA,IACH;AAAA,IACA,YAAY,GAAG,gBAAgB;AAAA,IAC/B,kBAAkB,GAAG,gBAAgB;AAAA,IACrC,kBAAkB,GAAG,gBAAgB;AAAA,IACrC,0BAA0B,GAAG,gBAAgB;AAAA,IAC7C,sBAAsB,WAAW;AAAA,IACjC,sBAAsB,WAAW;AAAA,IACjC,aAAa,OAAO,eAAe,OAAO,KAAK,OAAO,YAAY,IAAI,CAAC;AAAA,IACvE,OAAO,OAAO;AAAA,IACd,kBAAkB,OAAO;AAAA,IACzB,sBAAsB,OAAO;AAAA,IAC7B,gBAAgB,OAAO;AAAA,IACvB,kBAAkB,OAAO;AAAA,IACzB,oBAAoB,OAAO;AAAA,IAC3B,YAAY,OAAO;AAAA,IACnB,gBAAgB;AAAA,MACZ;AAAA,MACA,iBAAiB,WAAW;AAAA,MAC5B,mBAAmB,WAAW;AAAA,IAClC;AAAA,EACJ;AACJ;",
  "names": []
}
