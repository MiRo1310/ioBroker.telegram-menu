{
  "version": 3,
  "sources": ["../../src/app/configVariables.ts"],
  "sourcesContent": ["import type { DataObject, TelegramParams } from '../types/types';\nimport type { Checkboxes, UserActiveCheckbox, UsersInGroup } from '@/types/app';\n\nexport const getIds = {\n    telegramRequestID: (instance: string): string => `${instance}.communicate.request`,\n    telegramBotSendMessageID: (instance: string): string => `${instance}.communicate.botSendMessageId`,\n    telegramRequestMessageID: (instance: string): string => `${instance}.communicate.requestMessageId`,\n    telegramInfoConnectionID: (instance: string): string => `${instance}.info.connection`,\n    telegramRequestChatID: (instance: string): string => `${instance}.communicate.requestChatId`,\n};\n\nexport const getConfigVariables = (\n    config: ioBroker.AdapterConfig,\n): {\n    checkboxNoEntryFound: boolean;\n    sendMenuAfterRestart: boolean;\n    listOfMenus: string[];\n    token: string;\n    directoryPicture: string;\n    isUserActiveCheckbox: UserActiveCheckbox;\n    menusWithUsers: UsersInGroup;\n    textNoEntryFound: string;\n    dataObject: DataObject;\n    checkboxes: Checkboxes;\n    telegramParams: TelegramParams;\n} => {\n    const telegramInstances = config.instanceList ?? [];\n    const checkboxes = config.checkbox;\n    const telegramParams: TelegramParams = {\n        telegramInstance: 'telegram.0', //default value\n        telegramInstanceList: telegramInstances,\n        resize_keyboard: checkboxes.resKey,\n        one_time_keyboard: checkboxes.oneTiKey,\n        userListWithChatID: config.userListWithChatID,\n    };\n    return {\n        checkboxes,\n        checkboxNoEntryFound: checkboxes.checkboxNoValueFound,\n        sendMenuAfterRestart: checkboxes.sendMenuAfterRestart,\n        listOfMenus: config.usersInGroup ? Object.keys(config.usersInGroup) : [],\n        token: config.tokenGrafana,\n        directoryPicture: config.directory,\n        isUserActiveCheckbox: config.userActiveCheckbox,\n        menusWithUsers: config.usersInGroup,\n        textNoEntryFound: (config.textNoEntry as string | undefined) ?? 'Entry not found',\n        dataObject: config.data,\n        telegramParams,\n    };\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGO,MAAM,SAAS;AAAA,EAClB,mBAAmB,CAAC,aAA6B,GAAG,QAAQ;AAAA,EAC5D,0BAA0B,CAAC,aAA6B,GAAG,QAAQ;AAAA,EACnE,0BAA0B,CAAC,aAA6B,GAAG,QAAQ;AAAA,EACnE,0BAA0B,CAAC,aAA6B,GAAG,QAAQ;AAAA,EACnE,uBAAuB,CAAC,aAA6B,GAAG,QAAQ;AACpE;AAEO,MAAM,qBAAqB,CAC9B,WAaC;AAzBL;AA0BI,QAAM,qBAAoB,YAAO,iBAAP,YAAuB,CAAC;AAClD,QAAM,aAAa,OAAO;AAC1B,QAAM,iBAAiC;AAAA,IACnC,kBAAkB;AAAA;AAAA,IAClB,sBAAsB;AAAA,IACtB,iBAAiB,WAAW;AAAA,IAC5B,mBAAmB,WAAW;AAAA,IAC9B,oBAAoB,OAAO;AAAA,EAC/B;AACA,SAAO;AAAA,IACH;AAAA,IACA,sBAAsB,WAAW;AAAA,IACjC,sBAAsB,WAAW;AAAA,IACjC,aAAa,OAAO,eAAe,OAAO,KAAK,OAAO,YAAY,IAAI,CAAC;AAAA,IACvE,OAAO,OAAO;AAAA,IACd,kBAAkB,OAAO;AAAA,IACzB,sBAAsB,OAAO;AAAA,IAC7B,gBAAgB,OAAO;AAAA,IACvB,mBAAmB,YAAO,gBAAP,YAA6C;AAAA,IAChE,YAAY,OAAO;AAAA,IACnB;AAAA,EACJ;AACJ;",
  "names": []
}
