{
  "version": 3,
  "sources": ["../../src/app/configVariables.ts"],
  "sourcesContent": ["import type { Adapter, DataObject, TelegramParams } from '../types/types';\nimport type { Checkboxes, UserActiveCheckbox, MenusWithUsers } from '@/types/app';\nimport type { AdapterConfig } from '../types/adapter-config';\n\nexport const getIds = {\n    telegramRequestID: (instance: string): string => `${instance}.communicate.request`,\n    telegramBotSendMessageID: (instance: string): string => `${instance}.communicate.botSendMessageId`,\n    telegramRequestMessageID: (instance: string): string => `${instance}.communicate.requestMessageId`,\n    telegramInfoConnectionID: (instance: string): string => `${instance}.info.connection`,\n    telegramRequestChatID: (instance: string): string => `${instance}.communicate.requestChatId`,\n};\n\nexport const getConfigVariables = (\n    config: ioBroker.AdapterConfig,\n    adapter: Adapter,\n): {\n    checkboxNoEntryFound: boolean;\n    sendMenuAfterRestart: boolean;\n    listOfMenus: string[];\n    token: string;\n    directoryPicture: string;\n    isUserActiveCheckbox: UserActiveCheckbox;\n    menusWithUsers: MenusWithUsers;\n    textNoEntryFound: string;\n    dataObject: DataObject;\n    checkboxes: Checkboxes;\n    telegramParams: TelegramParams;\n} => {\n    const c = config as AdapterConfig;\n\n    const telegramInstances = c.instanceList ?? [];\n    const checkboxes = c.checkbox;\n    const telegramParams: TelegramParams = {\n        telegramInstanceList: telegramInstances,\n        resize_keyboard: checkboxes.resKey,\n        one_time_keyboard: checkboxes.oneTiKey,\n        userListWithChatID: c.userListWithChatID,\n        adapter,\n    };\n    return {\n        checkboxes,\n        checkboxNoEntryFound: checkboxes.checkboxNoValueFound,\n        sendMenuAfterRestart: checkboxes.sendMenuAfterRestart,\n        listOfMenus: c.usersInGroup ? Object.keys(c.usersInGroup) : [],\n        token: c.tokenGrafana,\n        directoryPicture: c.directory ?? '/opt/iobroker/media/',\n        isUserActiveCheckbox: c.userActiveCheckbox,\n        menusWithUsers: c.usersInGroup,\n        textNoEntryFound: (c.textNoEntry as string | undefined) ?? 'Entry not found',\n        dataObject: c.data,\n        telegramParams,\n    };\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIO,MAAM,SAAS;AAAA,EAClB,mBAAmB,CAAC,aAA6B,GAAG,QAAQ;AAAA,EAC5D,0BAA0B,CAAC,aAA6B,GAAG,QAAQ;AAAA,EACnE,0BAA0B,CAAC,aAA6B,GAAG,QAAQ;AAAA,EACnE,0BAA0B,CAAC,aAA6B,GAAG,QAAQ;AAAA,EACnE,uBAAuB,CAAC,aAA6B,GAAG,QAAQ;AACpE;AAEO,MAAM,qBAAqB,CAC9B,QACA,YAaC;AA3BL;AA4BI,QAAM,IAAI;AAEV,QAAM,qBAAoB,OAAE,iBAAF,YAAkB,CAAC;AAC7C,QAAM,aAAa,EAAE;AACrB,QAAM,iBAAiC;AAAA,IACnC,sBAAsB;AAAA,IACtB,iBAAiB,WAAW;AAAA,IAC5B,mBAAmB,WAAW;AAAA,IAC9B,oBAAoB,EAAE;AAAA,IACtB;AAAA,EACJ;AACA,SAAO;AAAA,IACH;AAAA,IACA,sBAAsB,WAAW;AAAA,IACjC,sBAAsB,WAAW;AAAA,IACjC,aAAa,EAAE,eAAe,OAAO,KAAK,EAAE,YAAY,IAAI,CAAC;AAAA,IAC7D,OAAO,EAAE;AAAA,IACT,mBAAkB,OAAE,cAAF,YAAe;AAAA,IACjC,sBAAsB,EAAE;AAAA,IACxB,gBAAgB,EAAE;AAAA,IAClB,mBAAmB,OAAE,gBAAF,YAAwC;AAAA,IAC3D,YAAY,EAAE;AAAA,IACd;AAAA,EACJ;AACJ;",
  "names": []
}
