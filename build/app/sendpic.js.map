{
  "version": 3,
  "sources": ["../../src/app/sendpic.ts"],
  "sourcesContent": ["import { sendToTelegram } from './telegram';\nimport { validateDirectory } from '../lib/utils';\nimport { exec } from 'child_process';\nimport { errorLogger } from './logging';\nimport { adapter } from '../main';\nimport type { Part, Timeouts, UserListWithChatId } from '../types/types';\nimport { replaceAll } from '../lib/string';\n\nfunction sendPic(\n    part: Part,\n    userToSend: string,\n    instanceTelegram: string,\n    resize_keyboard: boolean,\n    one_time_keyboard: boolean,\n    userListWithChatID: UserListWithChatId[],\n    token: string,\n    directoryPicture: string,\n    timeouts: Timeouts[],\n    timeoutKey: string,\n): Timeouts[] {\n    try {\n        part.sendPic?.forEach(element => {\n            const { id, delay, fileName } = element;\n            let path = '';\n            if (id != '-') {\n                const newUrl = replaceAll(id, '&amp;', '&');\n\n                exec(\n                    `curl -H \"Autorisation: Bearer ${token.trim()}\" \"${newUrl}\" > ${directoryPicture}${fileName}`,\n                    (error: any, stdout: any, stderr: any) => {\n                        if (stdout) {\n                            adapter.log.debug(`Stdout: ${stdout}`);\n                        }\n                        if (stderr) {\n                            adapter.log.debug(`Stderr: ${stderr}`);\n                        }\n                        if (error) {\n                            errorLogger('Error in exec:', error, adapter);\n\n                            return;\n                        }\n                    },\n                );\n\n                adapter.log.debug(`Delay Time: ${delay}`);\n                timeoutKey += 1;\n\n                if (!validateDirectory(adapter, directoryPicture)) {\n                    return;\n                }\n\n                path = `${directoryPicture}${fileName}`;\n                adapter.log.debug(`Path: ${path}`);\n            } else {\n                return;\n            }\n\n            const timeout = adapter.setTimeout(\n                async () => {\n                    await sendToTelegram({\n                        userToSend,\n                        textToSend: path,\n                        instanceTelegram,\n                        resize_keyboard,\n                        one_time_keyboard,\n                        userListWithChatID,\n                    });\n                    let timeoutToClear: Timeouts[] = [];\n                    timeoutToClear = timeouts.filter(item => item.key == timeoutKey);\n                    timeoutToClear.forEach(item => {\n                        adapter.clearTimeout(item.timeout);\n                    });\n\n                    timeouts = timeouts.filter(item => item.key !== timeoutKey);\n\n                    adapter.log.debug('Picture sent');\n                },\n                parseInt(String(element.delay)),\n            );\n\n            if (timeout) {\n                timeouts.push({ key: timeoutKey, timeout: timeout });\n            }\n        });\n        return timeouts;\n    } catch (e: any) {\n        errorLogger('Error send pic:', e, adapter);\n    }\n    return timeouts;\n}\n\nexport { sendPic };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA+B;AAC/B,mBAAkC;AAClC,2BAAqB;AACrB,qBAA4B;AAC5B,kBAAwB;AAExB,oBAA2B;AAE3B,SAAS,QACL,MACA,YACA,kBACA,iBACA,mBACA,oBACA,OACA,kBACA,UACA,YACU;AAnBd;AAoBI,MAAI;AACA,eAAK,YAAL,mBAAc,QAAQ,aAAW;AAC7B,YAAM,EAAE,IAAI,OAAO,SAAS,IAAI;AAChC,UAAI,OAAO;AACX,UAAI,MAAM,KAAK;AACX,cAAM,aAAS,0BAAW,IAAI,SAAS,GAAG;AAE1C;AAAA,UACI,iCAAiC,MAAM,KAAK,CAAC,MAAM,MAAM,OAAO,gBAAgB,GAAG,QAAQ;AAAA,UAC3F,CAAC,OAAY,QAAa,WAAgB;AACtC,gBAAI,QAAQ;AACR,kCAAQ,IAAI,MAAM,WAAW,MAAM,EAAE;AAAA,YACzC;AACA,gBAAI,QAAQ;AACR,kCAAQ,IAAI,MAAM,WAAW,MAAM,EAAE;AAAA,YACzC;AACA,gBAAI,OAAO;AACP,8CAAY,kBAAkB,OAAO,mBAAO;AAE5C;AAAA,YACJ;AAAA,UACJ;AAAA,QACJ;AAEA,4BAAQ,IAAI,MAAM,eAAe,KAAK,EAAE;AACxC,sBAAc;AAEd,YAAI,KAAC,gCAAkB,qBAAS,gBAAgB,GAAG;AAC/C;AAAA,QACJ;AAEA,eAAO,GAAG,gBAAgB,GAAG,QAAQ;AACrC,4BAAQ,IAAI,MAAM,SAAS,IAAI,EAAE;AAAA,MACrC,OAAO;AACH;AAAA,MACJ;AAEA,YAAM,UAAU,oBAAQ;AAAA,QACpB,YAAY;AACR,oBAAM,gCAAe;AAAA,YACjB;AAAA,YACA,YAAY;AAAA,YACZ;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,UACJ,CAAC;AACD,cAAI,iBAA6B,CAAC;AAClC,2BAAiB,SAAS,OAAO,UAAQ,KAAK,OAAO,UAAU;AAC/D,yBAAe,QAAQ,UAAQ;AAC3B,gCAAQ,aAAa,KAAK,OAAO;AAAA,UACrC,CAAC;AAED,qBAAW,SAAS,OAAO,UAAQ,KAAK,QAAQ,UAAU;AAE1D,8BAAQ,IAAI,MAAM,cAAc;AAAA,QACpC;AAAA,QACA,SAAS,OAAO,QAAQ,KAAK,CAAC;AAAA,MAClC;AAEA,UAAI,SAAS;AACT,iBAAS,KAAK,EAAE,KAAK,YAAY,QAAiB,CAAC;AAAA,MACvD;AAAA,IACJ;AACA,WAAO;AAAA,EACX,SAAS,GAAQ;AACb,oCAAY,mBAAmB,GAAG,mBAAO;AAAA,EAC7C;AACA,SAAO;AACX;",
  "names": []
}
