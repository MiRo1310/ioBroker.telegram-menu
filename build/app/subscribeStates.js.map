{
  "version": 3,
  "sources": ["../../src/app/subscribeStates.ts"],
  "sourcesContent": ["import { _this } from '../main';\nimport { deleteDoubleEntriesInArray } from './global';\nimport type { SetStateIds } from '../types/types';\nimport { jsonString } from '../lib/string';\n\nasync function _subscribeAndUnSubscribeForeignStatesAsync(obj: { array?: SetStateIds[]; id?: string }): Promise<void> {\n    if (obj.id) {\n        _this.log.debug(`Subscribe to ${obj.id}`);\n    } else if (obj.array) {\n        for (const element of obj.array) {\n            await _this.subscribeForeignStatesAsync(element.id);\n        }\n    }\n}\n\nasync function _subscribeForeignStatesAsync(array: string[]): Promise<void> {\n    array = deleteDoubleEntriesInArray(array);\n    for (const element of array) {\n        await _this.subscribeForeignStatesAsync(element);\n    }\n    _this.log.debug(`Subscribe all States of: ${jsonString(array)}`);\n}\n\nexport { _subscribeAndUnSubscribeForeignStatesAsync, _subscribeForeignStatesAsync };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAsB;AACtB,oBAA2C;AAE3C,oBAA2B;AAE3B,eAAe,2CAA2C,KAA4D;AAClH,MAAI,IAAI,IAAI;AACR,sBAAM,IAAI,MAAM,gBAAgB,IAAI,EAAE,EAAE;AAAA,EAC5C,WAAW,IAAI,OAAO;AAClB,eAAW,WAAW,IAAI,OAAO;AAC7B,YAAM,kBAAM,4BAA4B,QAAQ,EAAE;AAAA,IACtD;AAAA,EACJ;AACJ;AAEA,eAAe,6BAA6B,OAAgC;AACxE,cAAQ,0CAA2B,KAAK;AACxC,aAAW,WAAW,OAAO;AACzB,UAAM,kBAAM,4BAA4B,OAAO;AAAA,EACnD;AACA,oBAAM,IAAI,MAAM,gCAA4B,0BAAW,KAAK,CAAC,EAAE;AACnE;",
  "names": []
}
