{
  "version": 3,
  "sources": ["../../src/app/idBySelector.ts"],
  "sourcesContent": ["import type { TelegramParams } from '../types/types';\nimport { config } from '../config/config';\nimport type TelegramMenu from '../main';\nimport { exchangeValue } from '../lib/exchangeValue';\nimport { getNewline } from '../lib/string';\nimport { sendToTelegram } from './telegram';\nimport { errorLogger } from './logging';\nimport type { BooleanString } from '@/types/app';\n\nexport const idBySelector = async ({\n    instance,\n    adapter,\n    selector,\n    text,\n    userToSend,\n    newline,\n    telegramParams,\n}: {\n    adapter: TelegramMenu;\n    selector: string;\n    text: string;\n    userToSend: string;\n    newline: BooleanString;\n    telegramParams: TelegramParams;\n    instance: string;\n}): Promise<void> => {\n    let text2Send = '';\n    try {\n        const functions = selector.replace(config.functionSelektor, '');\n        let enums: string[] | undefined = [];\n        const result = await adapter.getEnumsAsync();\n        const enumsFunctions = result?.['enum.functions'][`enum.functions.${functions}`];\n        if (!enumsFunctions) {\n            return;\n        }\n        enums = enumsFunctions.common.members;\n        if (!enums) {\n            return;\n        }\n\n        const promises = enums.map(async (id: string) => {\n            const value = await adapter.getForeignStateAsync(id);\n\n            let newText = text;\n\n            if (text.includes('{common.name}')) {\n                const result = await adapter.getForeignObjectAsync(id);\n                newText = newText.replace('{common.name}', getCommonName({ name: result?.common.name, adapter }));\n            }\n            if (text.includes('{folder.name}')) {\n                const result = await adapter.getForeignObjectAsync(removeLastPartOfId(id));\n                newText = newText.replace('{folder.name}', getCommonName({ name: result?.common.name, adapter }));\n            }\n\n            const { textToSend } = exchangeValue(adapter, newText, value?.val ?? '');\n\n            text2Send += textToSend;\n            text2Send += getNewline(newline);\n\n            adapter.log.debug(`Text to send:  ${JSON.stringify(text2Send)}`);\n        });\n        Promise.all(promises)\n            .then(async () => {\n                await sendToTelegram({\n                    instance,\n                    userToSend,\n                    textToSend: text2Send,\n                    telegramParams,\n                });\n            })\n            .catch(e => {\n                errorLogger('Error Promise', e, adapter);\n            });\n    } catch (error: any) {\n        errorLogger('Error idBySelector', error, adapter);\n    }\n};\n\nfunction getCommonName({ name, adapter }: { name?: ioBroker.StringOrTranslated; adapter: TelegramMenu }): string {\n    const language = adapter.language ?? 'en';\n    if (!name) {\n        return '';\n    }\n    if (typeof name === 'string') {\n        return name;\n    }\n    if (language) {\n        return name[language] ?? '';\n    }\n    return '';\n}\n\nfunction removeLastPartOfId(id: string): string {\n    const parts = id.split('.');\n    parts.pop();\n    return parts.join('.');\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,oBAAuB;AAEvB,2BAA8B;AAC9B,oBAA2B;AAC3B,sBAA+B;AAC/B,qBAA4B;AAGrB,MAAM,eAAe,OAAO;AAAA,EAC/B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACJ,MAQqB;AACjB,MAAI,YAAY;AAChB,MAAI;AACA,UAAM,YAAY,SAAS,QAAQ,qBAAO,kBAAkB,EAAE;AAC9D,QAAI,QAA8B,CAAC;AACnC,UAAM,SAAS,MAAM,QAAQ,cAAc;AAC3C,UAAM,iBAAiB,iCAAS,kBAAkB,kBAAkB,SAAS;AAC7E,QAAI,CAAC,gBAAgB;AACjB;AAAA,IACJ;AACA,YAAQ,eAAe,OAAO;AAC9B,QAAI,CAAC,OAAO;AACR;AAAA,IACJ;AAEA,UAAM,WAAW,MAAM,IAAI,OAAO,OAAe;AAxCzD;AAyCY,YAAM,QAAQ,MAAM,QAAQ,qBAAqB,EAAE;AAEnD,UAAI,UAAU;AAEd,UAAI,KAAK,SAAS,eAAe,GAAG;AAChC,cAAMA,UAAS,MAAM,QAAQ,sBAAsB,EAAE;AACrD,kBAAU,QAAQ,QAAQ,iBAAiB,cAAc,EAAE,MAAMA,WAAA,gBAAAA,QAAQ,OAAO,MAAM,QAAQ,CAAC,CAAC;AAAA,MACpG;AACA,UAAI,KAAK,SAAS,eAAe,GAAG;AAChC,cAAMA,UAAS,MAAM,QAAQ,sBAAsB,mBAAmB,EAAE,CAAC;AACzE,kBAAU,QAAQ,QAAQ,iBAAiB,cAAc,EAAE,MAAMA,WAAA,gBAAAA,QAAQ,OAAO,MAAM,QAAQ,CAAC,CAAC;AAAA,MACpG;AAEA,YAAM,EAAE,WAAW,QAAI,oCAAc,SAAS,UAAS,oCAAO,QAAP,YAAc,EAAE;AAEvE,mBAAa;AACb,uBAAa,0BAAW,OAAO;AAE/B,cAAQ,IAAI,MAAM,kBAAkB,KAAK,UAAU,SAAS,CAAC,EAAE;AAAA,IACnE,CAAC;AACD,YAAQ,IAAI,QAAQ,EACf,KAAK,YAAY;AACd,gBAAM,gCAAe;AAAA,QACjB;AAAA,QACA;AAAA,QACA,YAAY;AAAA,QACZ;AAAA,MACJ,CAAC;AAAA,IACL,CAAC,EACA,MAAM,OAAK;AACR,sCAAY,iBAAiB,GAAG,OAAO;AAAA,IAC3C,CAAC;AAAA,EACT,SAAS,OAAY;AACjB,oCAAY,sBAAsB,OAAO,OAAO;AAAA,EACpD;AACJ;AAEA,SAAS,cAAc,EAAE,MAAM,QAAQ,GAA0E;AA9EjH;AA+EI,QAAM,YAAW,aAAQ,aAAR,YAAoB;AACrC,MAAI,CAAC,MAAM;AACP,WAAO;AAAA,EACX;AACA,MAAI,OAAO,SAAS,UAAU;AAC1B,WAAO;AAAA,EACX;AACA,MAAI,UAAU;AACV,YAAO,UAAK,QAAQ,MAAb,YAAkB;AAAA,EAC7B;AACA,SAAO;AACX;AAEA,SAAS,mBAAmB,IAAoB;AAC5C,QAAM,QAAQ,GAAG,MAAM,GAAG;AAC1B,QAAM,IAAI;AACV,SAAO,MAAM,KAAK,GAAG;AACzB;",
  "names": ["result"]
}
