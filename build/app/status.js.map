{
  "version": 3,
  "sources": ["../../src/app/status.ts"],
  "sourcesContent": ["import { decomposeText } from '../lib/string';\nimport { config } from '../config/config';\nimport { statusIdAndParams } from '../lib/appUtils';\nimport { isDefined } from '../lib/utils';\nimport { integrateTimeIntoText } from '../lib/time';\nimport { exchangeValue } from '../lib/exchangeValue';\nimport type { Adapter } from '../types/types';\n\nexport const checkStatus = async (adapter: Adapter, text: string): Promise<string> => {\n    const { substring, substringExcludeSearch, textExcludeSubstring } = decomposeText(\n        text,\n        config.status.start,\n        config.status.end,\n    ); //substring {status:'ID':true} new | old {status:'id':'ID':true}\n\n    const { id, shouldChangeByStatusParameter } = statusIdAndParams(substringExcludeSearch);\n\n    const stateValue = await adapter.getForeignStateAsync(id);\n\n    if (!isDefined(stateValue?.val)) {\n        adapter.log.debug(`State not found for id : \"${id}\"`);\n        return text.replace(substring, '');\n    }\n\n    const stateValueString = String(stateValue.val);\n\n    if (text.includes(config.time)) {\n        return integrateTimeIntoText(textExcludeSubstring, stateValueString).replace(stateValueString, '');\n    }\n\n    const modifiedText = text.replace(substring, '&&');\n    const { textToSend, error } = exchangeValue(adapter, modifiedText, stateValue.val, shouldChangeByStatusParameter);\n    return !error ? textToSend : modifiedText;\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA8B;AAC9B,oBAAuB;AACvB,sBAAkC;AAClC,mBAA0B;AAC1B,kBAAsC;AACtC,2BAA8B;AAGvB,MAAM,cAAc,OAAO,SAAkB,SAAkC;AAClF,QAAM,EAAE,WAAW,wBAAwB,qBAAqB,QAAI;AAAA,IAChE;AAAA,IACA,qBAAO,OAAO;AAAA,IACd,qBAAO,OAAO;AAAA,EAClB;AAEA,QAAM,EAAE,IAAI,8BAA8B,QAAI,mCAAkB,sBAAsB;AAEtF,QAAM,aAAa,MAAM,QAAQ,qBAAqB,EAAE;AAExD,MAAI,KAAC,wBAAU,yCAAY,GAAG,GAAG;AAC7B,YAAQ,IAAI,MAAM,6BAA6B,EAAE,GAAG;AACpD,WAAO,KAAK,QAAQ,WAAW,EAAE;AAAA,EACrC;AAEA,QAAM,mBAAmB,OAAO,WAAW,GAAG;AAE9C,MAAI,KAAK,SAAS,qBAAO,IAAI,GAAG;AAC5B,eAAO,mCAAsB,sBAAsB,gBAAgB,EAAE,QAAQ,kBAAkB,EAAE;AAAA,EACrG;AAEA,QAAM,eAAe,KAAK,QAAQ,WAAW,IAAI;AACjD,QAAM,EAAE,YAAY,MAAM,QAAI,oCAAc,SAAS,cAAc,WAAW,KAAK,6BAA6B;AAChH,SAAO,CAAC,QAAQ,aAAa;AACjC;",
  "names": []
}
