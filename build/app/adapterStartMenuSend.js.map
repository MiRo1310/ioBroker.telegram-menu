{
  "version": 3,
  "sources": ["../../src/app/adapterStartMenuSend.ts"],
  "sourcesContent": ["import { sendToTelegram } from './telegram';\nimport { backMenuFunc } from './backMenu';\nimport type { ListOfMenus, MenuData, StartSides, TelegramParams } from '../types/types';\nimport { adapter } from '../main';\nimport { jsonString } from '../lib/string';\nimport { isStartside } from '../lib/appUtils';\nimport type { UserActiveCheckbox, UsersInGroup } from '@/types/app';\n\nexport async function adapterStartMenuSend(\n    listOfMenus: ListOfMenus,\n    startSides: StartSides,\n    userActiveCheckbox: UserActiveCheckbox,\n    menusWithUsers: UsersInGroup,\n    menuData: MenuData,\n    telegramParams: TelegramParams,\n): Promise<void> {\n    for (const menu of listOfMenus) {\n        const startSide = startSides[menu];\n\n        if (userActiveCheckbox[menu] && isStartside(startSide)) {\n            adapter.log.debug(`Startside: ${startSide}`);\n            if (menusWithUsers[menu]) {\n                for (const userToSend of menusWithUsers[menu]) {\n                    const { nav, text, parse_mode } = menuData[menu][startSide];\n                    backMenuFunc({ activePage: startSide, navigation: nav, userToSend: userToSend.name });\n\n                    adapter.log.debug(`User list: ${jsonString(telegramParams.userListWithChatID)}`);\n\n                    await sendToTelegram({\n                        userToSend: userToSend.name,\n                        textToSend: text,\n                        keyboard: nav,\n                        telegramParams,\n                        parse_mode,\n                    });\n                }\n            }\n        } else {\n            if (!isStartside(startSide)) {\n                adapter.log.debug(`Menu \"${menu}\" is a Submenu.`);\n                continue;\n            }\n            adapter.log.debug(`Menu \"${menu}\" is inactive.`);\n        }\n    }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA+B;AAC/B,sBAA6B;AAE7B,kBAAwB;AACxB,oBAA2B;AAC3B,sBAA4B;AAG5B,eAAsB,qBAClB,aACA,YACA,oBACA,gBACA,UACA,gBACa;AACb,aAAW,QAAQ,aAAa;AAC5B,UAAM,YAAY,WAAW,IAAI;AAEjC,QAAI,mBAAmB,IAAI,SAAK,6BAAY,SAAS,GAAG;AACpD,0BAAQ,IAAI,MAAM,cAAc,SAAS,EAAE;AAC3C,UAAI,eAAe,IAAI,GAAG;AACtB,mBAAW,cAAc,eAAe,IAAI,GAAG;AAC3C,gBAAM,EAAE,KAAK,MAAM,WAAW,IAAI,SAAS,IAAI,EAAE,SAAS;AAC1D,4CAAa,EAAE,YAAY,WAAW,YAAY,KAAK,YAAY,WAAW,KAAK,CAAC;AAEpF,8BAAQ,IAAI,MAAM,kBAAc,0BAAW,eAAe,kBAAkB,CAAC,EAAE;AAE/E,oBAAM,gCAAe;AAAA,YACjB,YAAY,WAAW;AAAA,YACvB,YAAY;AAAA,YACZ,UAAU;AAAA,YACV;AAAA,YACA;AAAA,UACJ,CAAC;AAAA,QACL;AAAA,MACJ;AAAA,IACJ,OAAO;AACH,UAAI,KAAC,6BAAY,SAAS,GAAG;AACzB,4BAAQ,IAAI,MAAM,SAAS,IAAI,iBAAiB;AAChD;AAAA,MACJ;AACA,0BAAQ,IAAI,MAAM,SAAS,IAAI,gBAAgB;AAAA,IACnD;AAAA,EACJ;AACJ;",
  "names": []
}
