{
  "version": 3,
  "sources": ["../../src/app/adapterStartMenuSend.ts"],
  "sourcesContent": ["import { sendToTelegram } from './telegram';\nimport { backMenuFunc } from './backMenu';\nimport type {\n    ListOfMenus,\n    StartSides,\n    IsUserActiveCheckbox,\n    MenusWithUsers,\n    MenuData,\n    UserListWithChatId,\n    NavPart,\n    BooleanString,\n} from '../types/types';\nimport { _this } from '../main';\nimport { jsonString } from '../lib/string';\n\nasync function adapterStartMenuSend(\n    listOfMenus: ListOfMenus,\n    startSides: StartSides,\n    userActiveCheckbox: IsUserActiveCheckbox,\n    menusWithUsers: MenusWithUsers,\n    menuData: MenuData,\n    userListWithChatID: UserListWithChatId[],\n    instanceTelegram: string,\n    resize_keyboard: boolean,\n    one_time_keyboard: boolean,\n): Promise<void> {\n    for (const menu of listOfMenus) {\n        const startSide = [startSides[menu]].toString();\n\n        if (userActiveCheckbox[menu] && startSide != '-' && startSide != '') {\n            _this.log.debug(`Startseite: ${startSide}`);\n            for (const user of menusWithUsers[menu]) {\n                backMenuFunc(startSide, menuData.data[menu][startSide].nav as NavPart, user);\n                _this.log.debug(`User list: ${jsonString(userListWithChatID)}`);\n\n                await sendToTelegram({\n                    user: user,\n                    textToSend: menuData.data[menu][startSide].text as string,\n                    keyboard: menuData.data[menu][startSide].nav,\n                    instance: instanceTelegram,\n                    resize_keyboard: resize_keyboard,\n                    one_time_keyboard: one_time_keyboard,\n                    userListWithChatID: userListWithChatID,\n                    parse_mode: menuData.data[menu][startSide].parse_mode as BooleanString,\n                });\n            }\n        } else {\n            if (startSide == '-') {\n                _this.log.debug(`Menu \"${menu}\" is a Submenu.`);\n                continue;\n            }\n            _this.log.debug(`Menu \"${menu}\" is inactive.`);\n        }\n    }\n}\nexport { adapterStartMenuSend };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA+B;AAC/B,sBAA6B;AAW7B,kBAAsB;AACtB,oBAA2B;AAE3B,eAAe,qBACX,aACA,YACA,oBACA,gBACA,UACA,oBACA,kBACA,iBACA,mBACa;AACb,aAAW,QAAQ,aAAa;AAC5B,UAAM,YAAY,CAAC,WAAW,IAAI,CAAC,EAAE,SAAS;AAE9C,QAAI,mBAAmB,IAAI,KAAK,aAAa,OAAO,aAAa,IAAI;AACjE,wBAAM,IAAI,MAAM,eAAe,SAAS,EAAE;AAC1C,iBAAW,QAAQ,eAAe,IAAI,GAAG;AACrC,0CAAa,WAAW,SAAS,KAAK,IAAI,EAAE,SAAS,EAAE,KAAgB,IAAI;AAC3E,0BAAM,IAAI,MAAM,kBAAc,0BAAW,kBAAkB,CAAC,EAAE;AAE9D,kBAAM,gCAAe;AAAA,UACjB;AAAA,UACA,YAAY,SAAS,KAAK,IAAI,EAAE,SAAS,EAAE;AAAA,UAC3C,UAAU,SAAS,KAAK,IAAI,EAAE,SAAS,EAAE;AAAA,UACzC,UAAU;AAAA,UACV;AAAA,UACA;AAAA,UACA;AAAA,UACA,YAAY,SAAS,KAAK,IAAI,EAAE,SAAS,EAAE;AAAA,QAC/C,CAAC;AAAA,MACL;AAAA,IACJ,OAAO;AACH,UAAI,aAAa,KAAK;AAClB,0BAAM,IAAI,MAAM,SAAS,IAAI,iBAAiB;AAC9C;AAAA,MACJ;AACA,wBAAM,IAAI,MAAM,SAAS,IAAI,gBAAgB;AAAA,IACjD;AAAA,EACJ;AACJ;",
  "names": []
}
