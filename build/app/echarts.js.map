{
  "version": 3,
  "sources": ["../../src/app/echarts.ts"],
  "sourcesContent": ["import TelegramMenu from '../main';\nimport { errorLogger } from './logging';\nimport { sendToTelegram } from './telegram';\nimport type { Echart, UserListWithChatId } from '../types/types';\nimport { checkDirectoryIsOk } from './global';\n\nfunction getChart(\n    echarts: Echart[],\n    directoryPicture: string,\n    user: string,\n    instanceTelegram: string,\n    userListWithChatID: UserListWithChatId[],\n    resize_keyboard: boolean,\n    one_time_keyboard: boolean,\n): void {\n    const _this = TelegramMenu.getInstance();\n    try {\n        if (!echarts) {\n            return;\n        }\n        for (const echart of echarts) {\n            const splitPreset = echart.preset.split('.');\n            const instanceOfEchart = `${splitPreset[0]}.${splitPreset[1]}`;\n\n            if (!checkDirectoryIsOk(directoryPicture)) {\n                return;\n            }\n            _this.sendTo(\n                instanceOfEchart,\n                {\n                    preset: echart.preset,\n                    renderer: 'jpg',\n                    background: echart.background,\n                    theme: echart.theme,\n                    quality: 1.0,\n                    fileOnDisk: directoryPicture + echart.filename,\n                },\n                (result: any) => {\n                    sendToTelegram({\n                        user: user,\n                        textToSend: result.error || directoryPicture + echart.filename,\n                        instance: instanceTelegram,\n                        resize_keyboard: resize_keyboard,\n                        one_time_keyboard: one_time_keyboard,\n                        userListWithChatID: userListWithChatID,\n                        parse_mode: 'false',\n                    }).catch((e: any) => {\n                        errorLogger('Error send to telegram: ', e);\n                    });\n                },\n            );\n        }\n    } catch (e: any) {\n        errorLogger('Error get chart:', e);\n    }\n}\n\nexport { getChart };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAyB;AACzB,qBAA4B;AAC5B,sBAA+B;AAE/B,oBAAmC;AAEnC,SAAS,SACL,SACA,kBACA,MACA,kBACA,oBACA,iBACA,mBACI;AACJ,QAAM,QAAQ,YAAAA,QAAa,YAAY;AACvC,MAAI;AACA,QAAI,CAAC,SAAS;AACV;AAAA,IACJ;AACA,eAAW,UAAU,SAAS;AAC1B,YAAM,cAAc,OAAO,OAAO,MAAM,GAAG;AAC3C,YAAM,mBAAmB,GAAG,YAAY,CAAC,CAAC,IAAI,YAAY,CAAC,CAAC;AAE5D,UAAI,KAAC,kCAAmB,gBAAgB,GAAG;AACvC;AAAA,MACJ;AACA,YAAM;AAAA,QACF;AAAA,QACA;AAAA,UACI,QAAQ,OAAO;AAAA,UACf,UAAU;AAAA,UACV,YAAY,OAAO;AAAA,UACnB,OAAO,OAAO;AAAA,UACd,SAAS;AAAA,UACT,YAAY,mBAAmB,OAAO;AAAA,QAC1C;AAAA,QACA,CAAC,WAAgB;AACb,8CAAe;AAAA,YACX;AAAA,YACA,YAAY,OAAO,SAAS,mBAAmB,OAAO;AAAA,YACtD,UAAU;AAAA,YACV;AAAA,YACA;AAAA,YACA;AAAA,YACA,YAAY;AAAA,UAChB,CAAC,EAAE,MAAM,CAAC,MAAW;AACjB,4CAAY,4BAA4B,CAAC;AAAA,UAC7C,CAAC;AAAA,QACL;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ,SAAS,GAAQ;AACb,oCAAY,oBAAoB,CAAC;AAAA,EACrC;AACJ;",
  "names": ["TelegramMenu"]
}
