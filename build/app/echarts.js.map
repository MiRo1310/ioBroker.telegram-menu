{
  "version": 3,
  "sources": ["../../src/app/echarts.ts"],
  "sourcesContent": ["import { adapter } from '../main';\nimport { errorLogger } from './logging';\nimport { sendToTelegram } from './telegram';\nimport type { Echart, TelegramParams, UserListWithChatId } from '../types/types';\nimport { validateDirectory } from '../lib/utils';\n\nfunction getChart(\n    echarts: Echart[],\n    directoryPicture: string,\n    user: string,\n\n    userListWithChatID: UserListWithChatId[],\n    telegramParams: TelegramParams,\n): void {\n    try {\n        if (!echarts) {\n            return;\n        }\n        for (const echart of echarts) {\n            const splitPreset = echart.preset.split('.');\n            const instanceOfEchart = `${splitPreset[0]}.${splitPreset[1]}`;\n\n            if (!validateDirectory(adapter, directoryPicture)) {\n                return;\n            }\n            adapter.sendTo(\n                instanceOfEchart,\n                {\n                    preset: echart.preset,\n                    renderer: 'jpg',\n                    background: echart.background,\n                    theme: echart.theme,\n                    quality: 1.0,\n                    fileOnDisk: directoryPicture + echart.filename,\n                },\n                (result: any) => {\n                    sendToTelegram({\n                        userToSend: user,\n                        textToSend: result.error || directoryPicture + echart.filename,\n                        telegramParams,\n                        userListWithChatID,\n                    }).catch((e: any) => {\n                        errorLogger('Error send to telegram: ', e, adapter);\n                    });\n                },\n            );\n        }\n    } catch (e: any) {\n        errorLogger('Error get chart:', e, adapter);\n    }\n}\n\nexport { getChart };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAwB;AACxB,qBAA4B;AAC5B,sBAA+B;AAE/B,mBAAkC;AAElC,SAAS,SACL,SACA,kBACA,MAEA,oBACA,gBACI;AACJ,MAAI;AACA,QAAI,CAAC,SAAS;AACV;AAAA,IACJ;AACA,eAAW,UAAU,SAAS;AAC1B,YAAM,cAAc,OAAO,OAAO,MAAM,GAAG;AAC3C,YAAM,mBAAmB,GAAG,YAAY,CAAC,CAAC,IAAI,YAAY,CAAC,CAAC;AAE5D,UAAI,KAAC,gCAAkB,qBAAS,gBAAgB,GAAG;AAC/C;AAAA,MACJ;AACA,0BAAQ;AAAA,QACJ;AAAA,QACA;AAAA,UACI,QAAQ,OAAO;AAAA,UACf,UAAU;AAAA,UACV,YAAY,OAAO;AAAA,UACnB,OAAO,OAAO;AAAA,UACd,SAAS;AAAA,UACT,YAAY,mBAAmB,OAAO;AAAA,QAC1C;AAAA,QACA,CAAC,WAAgB;AACb,8CAAe;AAAA,YACX,YAAY;AAAA,YACZ,YAAY,OAAO,SAAS,mBAAmB,OAAO;AAAA,YACtD;AAAA,YACA;AAAA,UACJ,CAAC,EAAE,MAAM,CAAC,MAAW;AACjB,4CAAY,4BAA4B,GAAG,mBAAO;AAAA,UACtD,CAAC;AAAA,QACL;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ,SAAS,GAAQ;AACb,oCAAY,oBAAoB,GAAG,mBAAO;AAAA,EAC9C;AACJ;",
  "names": []
}
